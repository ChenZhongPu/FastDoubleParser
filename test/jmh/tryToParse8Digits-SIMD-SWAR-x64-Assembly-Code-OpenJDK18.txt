/Library/Java/JavaVirtualMachines/jdk-18.jdk/Contents/Home/bin/java -Dvisualvm.id=33227167534961 -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*FastDoubleParser*.tryToParseEightDigits* -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=51169:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jmh-core-1.28.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jopt-simple-4.6.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/commons-math3-3.2.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jmh-generator-annprocess-1.28.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-api-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/apiguardian-api-1.1.0.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/opentest4j-1.2.0.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-platform-commons-1.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-params-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-engine-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-platform-engine-1.7.1.jar -p /Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/out/production/FastDoubleParserDemo:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/out/production/FastDoubleParser -m ch.randelshofer.fastdoubleparserdemo/ch.randelshofer.fastdoubleparserdemo.Main
CompileCommand: print *FastDoubleParser*.tryToParseEightDigits* bool print = true
WARNING: Using incubator modules: jdk.incubator.vector
Intel(R) Core(TM) i7-8700B CPU @ 3.20GHz SIMD-256
x86_64, Mac OS X, 12.1, 12
OpenJDK 64-Bit Server VM, Oracle Corporation, 18-ea+30-2029
-XX:+UnlockExperimentalVMOptions, -XX:+UnlockDiagnosticVMOptions, -XX:PrintAssemblyOptions=intel, -XX:CompileCommand=print,*FastDoubleParser*.tryToParseEightDigits*

parsing random numbers in the range [0,1)

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     254  542       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigits (6 bytes)
 total in heap  [0x000000011b289110,0x000000011b289430] = 800
 relocation     [0x000000011b289270,0x000000011b2892a8] = 56
 main code      [0x000000011b2892c0,0x000000011b289380] = 192
 stub code      [0x000000011b289380,0x000000011b2893c0] = 64
 oops           [0x000000011b2893c0,0x000000011b2893c8] = 8
 metadata       [0x000000011b2893c8,0x000000011b2893d0] = 8
 scopes data    [0x000000011b2893d0,0x000000011b2893e8] = 24
 scopes pcs     [0x000000011b2893e8,0x000000011b289428] = 64
 dependencies   [0x000000011b289428,0x000000011b289430] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d42f688} 'tryToParseEightDigits' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011b2892c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011b2892c7:   push   rbp
  0x000000011b2892c8:   sub    rsp,0x30
  0x000000011b2892cc:   movabs rdi,0x13d42bdb0              ;   {metadata(method data for {method} {0x000000013d42f688} 'tryToParseEightDigits' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011b2892d6:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011b2892dc:   add    ebx,0x2
  0x000000011b2892df:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011b2892e5:   and    ebx,0x7fe
  0x000000011b2892eb:   cmp    ebx,0x0
  0x000000011b2892ee:   je     0x000000011b28931f
  0x000000011b2892f4:   movabs rdi,0x13d42bdb0              ;   {metadata(method data for {method} {0x000000013d42f688} 'tryToParseEightDigits' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011b2892fe:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011b289306:   nop
  0x000000011b289307:   call   0x000000011b289385           ; ImmutableOopMap {}
                                                            ;*invokestatic tryToParseEightDigitsSwarIndependentMultiplications {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigits@2 (line 608)
                                                            ;   {static_call}
  0x000000011b28930c:   add    rsp,0x30
  0x000000011b289310:   pop    rbp
  0x000000011b289311:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011b289318:   ja     0x000000011b28933d
  0x000000011b28931e:   ret
  0x000000011b28931f:   movabs r10,0x13d42f688              ;   {metadata({method} {0x000000013d42f688} 'tryToParseEightDigits' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011b289329:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28932e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b289336:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigits@-1 (line 608)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28933b:   jmp    0x000000011b2892f4
  0x000000011b28933d:   movabs r10,0x11b289311              ;   {internal_word}
  0x000000011b289347:   mov    QWORD PTR [r15+0x350],r10
  0x000000011b28934e:   jmp    0x000000011ac72100           ;   {runtime_call SafepointBlob}
  0x000000011b289353:   nop
  0x000000011b289354:   nop
  0x000000011b289355:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011b28935c:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011b289367:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011b289372:   add    rsp,0x30
  0x000000011b289376:   pop    rbp
  0x000000011b289377:   jmp    0x000000011ad12000           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b28937c:   hlt
  0x000000011b28937d:   hlt
  0x000000011b28937e:   hlt
  0x000000011b28937f:   hlt
[Stub Code]
  0x000000011b289380:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011b289385:   movabs rbx,0x13d42f7c0              ;   {static_stub}
  0x000000011b28938f:   jmp    0x000000011ac70a5c           ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x000000011b289394:   call   0x000000011ad15000           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011b289399:   movabs rdi,0x11071afc1              ;   {external_word}
  0x000000011b2893a3:   and    rsp,0xfffffffffffffff0
  0x000000011b2893a7:   call   0x00000001103c5290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b2893ac:   hlt
[Deopt Handler Code]
  0x000000011b2893ad:   movabs r10,0x11b2893ad              ;   {section_word}
  0x000000011b2893b7:   push   r10
  0x000000011b2893b9:   jmp    0x000000011ac713a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b2893be:   hlt
  0x000000011b2893bf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     259  544       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications (86 bytes)
 total in heap  [0x000000011b28f010,0x000000011b28fbf0] = 3040
 relocation     [0x000000011b28f170,0x000000011b28f218] = 168
 main code      [0x000000011b28f220,0x000000011b28f940] = 1824
 stub code      [0x000000011b28f940,0x000000011b28f980] = 64
 oops           [0x000000011b28f980,0x000000011b28f9b0] = 48
 metadata       [0x000000011b28f9b0,0x000000011b28f9f0] = 64
 scopes data    [0x000000011b28f9f0,0x000000011b28faf8] = 264
 scopes pcs     [0x000000011b28faf8,0x000000011b28fbd8] = 224
 dependencies   [0x000000011b28fbd8,0x000000011b28fbe0] = 8
 nul chk table  [0x000000011b28fbe0,0x000000011b28fbf0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d42f7c0} 'tryToParseEightDigitsSwarIndependentMultiplications' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0xe0]  (sp of caller)
  0x000000011b28f220:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011b28f227:   push   rbp
  0x000000011b28f228:   sub    rsp,0xd0
  0x000000011b28f22f:   movabs rcx,0x13d438000              ;   {metadata(method data for {method} {0x000000013d42f7c0} 'tryToParseEightDigitsSwarIndependentMultiplications' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011b28f239:   mov    r8d,DWORD PTR [rcx+0xac]
  0x000000011b28f240:   add    r8d,0x2
  0x000000011b28f244:   mov    DWORD PTR [rcx+0xac],r8d
  0x000000011b28f24b:   and    r8d,0x7fe
  0x000000011b28f252:   cmp    r8d,0x0
  0x000000011b28f256:   je     0x000000011b28f7b4
  0x000000011b28f25c:   movabs rcx,0x13d438000              ;   {metadata(method data for {method} {0x000000013d42f7c0} 'tryToParseEightDigitsSwarIndependentMultiplications' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011b28f266:   lea    rcx,[rcx+0x128]
  0x000000011b28f26d:   mov    r8,rsi
  0x000000011b28f270:   test   r8,r8
  0x000000011b28f273:   jne    0x000000011b28f27a
  0x000000011b28f275:   or     QWORD PTR [rcx+0x8],0x1
  0x000000011b28f27a:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f284:   lea    rcx,[rcx+0x3f0]
  0x000000011b28f28b:   movabs r8,0x61f039188               ;   {oop(a 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle'{0x000000061f039188})}
  0x000000011b28f295:   mov    rdi,r8
  0x000000011b28f298:   test   rdi,rdi
  0x000000011b28f29b:   jne    0x000000011b28f2a1
  0x000000011b28f29d:   or     QWORD PTR [rcx],0x1
  0x000000011b28f2a1:   mov    rdi,rsi
  0x000000011b28f2a4:   test   rdi,rdi
  0x000000011b28f2a7:   jne    0x000000011b28f2ae
  0x000000011b28f2a9:   or     QWORD PTR [rcx+0x10],0x1
  0x000000011b28f2ae:   movabs rcx,0x13d438000              ;   {metadata(method data for {method} {0x000000013d42f7c0} 'tryToParseEightDigitsSwarIndependentMultiplications' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011b28f2b8:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011b28f2c0:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f2ca:   mov    edi,DWORD PTR [rcx+0xac]
  0x000000011b28f2d0:   add    edi,0x2
  0x000000011b28f2d3:   mov    DWORD PTR [rcx+0xac],edi
  0x000000011b28f2d9:   and    edi,0x1ffffe
  0x000000011b28f2df:   cmp    edi,0x0
  0x000000011b28f2e2:   je     0x000000011b28f7d5
  0x000000011b28f2e8:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f2f2:   lea    rcx,[rcx+0x128]
  0x000000011b28f2f9:   movabs rdi,0x61f059de8              ;   {oop(a 'java/lang/invoke/VarHandle$AccessDescriptor'{0x000000061f059de8})}
  0x000000011b28f303:   test   rdi,rdi
  0x000000011b28f306:   jne    0x000000011b28f30d
  0x000000011b28f308:   or     QWORD PTR [rcx+0x8],0x1
  0x000000011b28f30d:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f317:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011b28f31f:   movabs rcx,0x13d2a5968              ;   {metadata(method data for {method} {0x00000008000b1ce0} 'checkExactAccessMode' '(Ljava/lang/invoke/VarHandle$AccessDescriptor;)V' in 'java/lang/invoke/VarHandle')}
  0x000000011b28f329:   mov    r8d,DWORD PTR [rcx+0xac]
  0x000000011b28f330:   add    r8d,0x2
  0x000000011b28f334:   mov    DWORD PTR [rcx+0xac],r8d
  0x000000011b28f33b:   and    r8d,0x1ffffe
  0x000000011b28f342:   cmp    r8d,0x0
  0x000000011b28f346:   je     0x000000011b28f7f6
  0x000000011b28f34c:   movabs rcx,0x13d2a5968              ;   {metadata(method data for {method} {0x00000008000b1ce0} 'checkExactAccessMode' '(Ljava/lang/invoke/VarHandle$AccessDescriptor;)V' in 'java/lang/invoke/VarHandle')}
  0x000000011b28f356:   inc    DWORD PTR [rcx+0xf0]
  0x000000011b28f35c:   movabs rcx,0x61f039188              ;   {oop(a 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle'{0x000000061f039188})}
  0x000000011b28f366:   movabs r8,0x13d2a6860               ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f370:   mov    ecx,DWORD PTR [rcx+0x8]
  0x000000011b28f373:   movabs r10,0x800000000
  0x000000011b28f37d:   add    rcx,r10
  0x000000011b28f380:   cmp    rcx,QWORD PTR [r8+0x150]
  0x000000011b28f387:   jne    0x000000011b28f396
  0x000000011b28f389:   add    QWORD PTR [r8+0x158],0x1
  0x000000011b28f391:   jmp    0x000000011b28f3fc
  0x000000011b28f396:   cmp    rcx,QWORD PTR [r8+0x160]
  0x000000011b28f39d:   jne    0x000000011b28f3ac
  0x000000011b28f39f:   add    QWORD PTR [r8+0x168],0x1
  0x000000011b28f3a7:   jmp    0x000000011b28f3fc
  0x000000011b28f3ac:   cmp    QWORD PTR [r8+0x150],0x0
  0x000000011b28f3b7:   jne    0x000000011b28f3d0
  0x000000011b28f3b9:   mov    QWORD PTR [r8+0x150],rcx
  0x000000011b28f3c0:   mov    QWORD PTR [r8+0x158],0x1
  0x000000011b28f3cb:   jmp    0x000000011b28f3fc
  0x000000011b28f3d0:   cmp    QWORD PTR [r8+0x160],0x0
  0x000000011b28f3db:   jne    0x000000011b28f3f4
  0x000000011b28f3dd:   mov    QWORD PTR [r8+0x160],rcx
  0x000000011b28f3e4:   mov    QWORD PTR [r8+0x168],0x1
  0x000000011b28f3ef:   jmp    0x000000011b28f3fc
  0x000000011b28f3f4:   add    QWORD PTR [r8+0x140],0x1
  0x000000011b28f3fc:   movabs rcx,0x13d2a6c68              ;   {metadata(method data for {method} {0x00000008000b0808} 'isDirect' '()Z' in 'java/lang/invoke/VarHandle')}
  0x000000011b28f406:   mov    r8d,DWORD PTR [rcx+0xac]
  0x000000011b28f40d:   add    r8d,0x2
  0x000000011b28f411:   mov    DWORD PTR [rcx+0xac],r8d
  0x000000011b28f418:   and    r8d,0x1ffffe
  0x000000011b28f41f:   cmp    r8d,0x0
  0x000000011b28f423:   je     0x000000011b28f817
  0x000000011b28f429:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f433:   inc    DWORD PTR [rcx+0x188]
  0x000000011b28f439:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f443:   inc    DWORD PTR [rcx+0x1a8]
  0x000000011b28f449:   movabs rcx,0x61f038ac8              ;   {oop(a 'java/lang/invoke/VarForm'{0x000000061f038ac8})}
  0x000000011b28f453:   mov    r8,rcx
  0x000000011b28f456:   movabs rdi,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f460:   add    QWORD PTR [rdi+0x1b8],0x1
  0x000000011b28f468:   movabs r8,0x13d2a6358               ;   {metadata(method data for {method} {0x00000008001511c8} 'getMemberName' '(I)Ljava/lang/invoke/MemberName;' in 'java/lang/invoke/VarForm')}
  0x000000011b28f472:   mov    edi,DWORD PTR [r8+0xac]
  0x000000011b28f479:   add    edi,0x2
  0x000000011b28f47c:   mov    DWORD PTR [r8+0xac],edi
  0x000000011b28f483:   and    edi,0x1ffffe
  0x000000011b28f489:   cmp    edi,0x0
  0x000000011b28f48c:   je     0x000000011b28f838
  0x000000011b28f492:   movabs r8,0x13d2a6358               ;   {metadata(method data for {method} {0x00000008001511c8} 'getMemberName' '(I)Ljava/lang/invoke/MemberName;' in 'java/lang/invoke/VarForm')}
  0x000000011b28f49c:   add    QWORD PTR [r8+0xf0],0x1
  0x000000011b28f4a4:   movabs rcx,0x13d2a64f8              ;   {metadata(method data for {method} {0x0000000800151170} 'getMemberNameOrNull' '(I)Ljava/lang/invoke/MemberName;' in 'java/lang/invoke/VarForm')}
  0x000000011b28f4ae:   mov    r8d,DWORD PTR [rcx+0xac]
  0x000000011b28f4b5:   add    r8d,0x2
  0x000000011b28f4b9:   mov    DWORD PTR [rcx+0xac],r8d
  0x000000011b28f4c0:   and    r8d,0x1ffffe
  0x000000011b28f4c7:   cmp    r8d,0x0
  0x000000011b28f4cb:   je     0x000000011b28f859
  0x000000011b28f4d1:   movabs rcx,0x13d2a64f8              ;   {metadata(method data for {method} {0x0000000800151170} 'getMemberNameOrNull' '(I)Ljava/lang/invoke/MemberName;' in 'java/lang/invoke/VarForm')}
  0x000000011b28f4db:   inc    DWORD PTR [rcx+0xf0]
  0x000000011b28f4e1:   movabs rcx,0x13d2a6358              ;   {metadata(method data for {method} {0x00000008001511c8} 'getMemberName' '(I)Ljava/lang/invoke/MemberName;' in 'java/lang/invoke/VarForm')}
  0x000000011b28f4eb:   inc    DWORD PTR [rcx+0x128]
  0x000000011b28f4f1:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f4fb:   lea    rcx,[rcx+0x1f0]
  0x000000011b28f502:   movabs r8,0x61f05a350               ;   {oop(a 'java/lang/invoke/MemberName'{0x000000061f05a350} = {method} {0x000000013d229f68} 'get' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;I)J' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f50c:   test   r8,r8
  0x000000011b28f50f:   jne    0x000000011b28f515
  0x000000011b28f511:   or     QWORD PTR [rcx],0x1
  0x000000011b28f515:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f51f:   lea    rcx,[rcx+0x210]
  0x000000011b28f526:   movabs r8,0x61f039188               ;   {oop(a 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle'{0x000000061f039188})}
  0x000000011b28f530:   test   r8,r8
  0x000000011b28f533:   jne    0x000000011b28f53a
  0x000000011b28f535:   or     QWORD PTR [rcx+0x8],0x1
  0x000000011b28f53a:   mov    r8,rsi
  0x000000011b28f53d:   test   r8,r8
  0x000000011b28f540:   jne    0x000000011b28f547
  0x000000011b28f542:   or     QWORD PTR [rcx+0x18],0x1
  0x000000011b28f547:   movabs rcx,0x13d2a6860              ;   {metadata(method data for {method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f551:   add    QWORD PTR [rcx+0x200],0x1
  0x000000011b28f559:   movabs rcx,0x13d2a7b50              ;   {metadata(method data for {method} {0x000000013d229f68} 'get' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;I)J' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f563:   mov    r8d,DWORD PTR [rcx+0xac]
  0x000000011b28f56a:   add    r8d,0x2
  0x000000011b28f56e:   mov    DWORD PTR [rcx+0xac],r8d
  0x000000011b28f575:   and    r8d,0x1ffffe
  0x000000011b28f57c:   cmp    r8d,0x0
  0x000000011b28f580:   je     0x000000011b28f87a
  0x000000011b28f586:   movabs rcx,0x13d2a7b50              ;   {metadata(method data for {method} {0x000000013d229f68} 'get' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;I)J' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f590:   add    QWORD PTR [rcx+0x160],0x1
  0x000000011b28f598:   movabs rcx,0x13d2a7d60              ;   {metadata(method data for {method} {0x000000013d229d70} 'index' '([BI)I' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f5a2:   mov    r8d,DWORD PTR [rcx+0xac]
  0x000000011b28f5a9:   add    r8d,0x2
  0x000000011b28f5ad:   mov    DWORD PTR [rcx+0xac],r8d
  0x000000011b28f5b4:   and    r8d,0x1ffffe
  0x000000011b28f5bb:   cmp    r8d,0x0
  0x000000011b28f5bf:   je     0x000000011b28f89b
  0x000000011b28f5c5:   mov    ecx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011b28f8bc
  0x000000011b28f5c8:   movabs r8,0x13d2a7d60               ;   {metadata(method data for {method} {0x000000013d229d70} 'index' '([BI)I' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f5d2:   add    QWORD PTR [r8+0xf0],0x1
  0x000000011b28f5da:   sub    ecx,0x7
  0x000000011b28f5dd:   movabs r8,0x61fc04fc8               ;   {oop(a 'jdk/internal/util/Preconditions$4'{0x000000061fc04fc8})}
  0x000000011b28f5e7:   mov    r8d,0x0
  0x000000011b28f5ed:   cmp    edx,r8d
  0x000000011b28f5f0:   jl     0x000000011b28f8c1
  0x000000011b28f5f6:   cmp    edx,ecx
  0x000000011b28f5f8:   jge    0x000000011b28f8ce
  0x000000011b28f5fe:   movabs rcx,0x13d2a7b50              ;   {metadata(method data for {method} {0x000000013d229f68} 'get' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;I)J' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f608:   lea    rcx,[rcx+0x1a8]
  0x000000011b28f60f:   mov    r8,rsi
  0x000000011b28f612:   movabs r8,0x800001ea0               ;   {metadata({type array byte})}
  0x000000011b28f61c:   xor    r8,QWORD PTR [rcx+0x8]
  0x000000011b28f620:   test   r8,0xfffffffffffffffc
  0x000000011b28f627:   je     0x000000011b28f65e
  0x000000011b28f629:   test   r8,0x2
  0x000000011b28f630:   jne    0x000000011b28f65e
  0x000000011b28f632:   cmp    QWORD PTR [rcx+0x8],0x0
  0x000000011b28f63a:   je     0x000000011b28f65a
  0x000000011b28f63c:   cmp    QWORD PTR [rcx+0x8],0x1
  0x000000011b28f644:   je     0x000000011b28f65a
  0x000000011b28f646:   xor    r8,QWORD PTR [rcx+0x8]
  0x000000011b28f64a:   test   r8,0xfffffffffffffffc
  0x000000011b28f651:   je     0x000000011b28f65e
  0x000000011b28f653:   or     QWORD PTR [rcx+0x8],0x2
  0x000000011b28f658:   jmp    0x000000011b28f65e
  0x000000011b28f65a:   mov    QWORD PTR [rcx+0x8],r8
  0x000000011b28f65e:   movabs rdi,0x61fc04978              ;   {oop(a 'jdk/internal/misc/Unsafe'{0x000000061fc04978})}
  0x000000011b28f668:   mov    rcx,rdi
  0x000000011b28f66b:   movabs r8,0x13d2a7b50               ;   {metadata(method data for {method} {0x000000013d229f68} 'get' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;I)J' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f675:   add    QWORD PTR [r8+0x170],0x1
  0x000000011b28f67d:   movsxd rdx,edx
  0x000000011b28f680:   mov    rcx,rdx
  0x000000011b28f683:   movabs r10,0x10
  0x000000011b28f68d:   add    rcx,r10
  0x000000011b28f690:   mov    rdx,rsi
  0x000000011b28f693:   mov    r8d,0x0
  0x000000011b28f699:   mov    rsi,rdi
  0x000000011b28f69c:   data16 xchg ax,ax
  0x000000011b28f69f:   call   0x000000011b28f945           ; ImmutableOopMap {}
                                                            ;*invokevirtual getLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@32 (line 115)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {optimized virtual_call}
  0x000000011b28f6a4:   mov    rcx,rax
  0x000000011b28f6a7:   movabs r10,0x3030303030303030
  0x000000011b28f6b1:   sub    rcx,r10
  0x000000011b28f6b4:   movabs r10,0x4646464646464646
  0x000000011b28f6be:   add    rax,r10
  0x000000011b28f6c1:   or     rax,rcx
  0x000000011b28f6c4:   movabs r10,0x8080808080808080
  0x000000011b28f6ce:   and    rax,r10
  0x000000011b28f6d1:   movabs rsi,0x0
  0x000000011b28f6db:   cmp    rax,rsi
  0x000000011b28f6de:   movabs rax,0x13d438000              ;   {metadata(method data for {method} {0x000000013d42f7c0} 'tryToParseEightDigitsSwarIndependentMultiplications' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011b28f6e8:   movabs rsi,0x150
  0x000000011b28f6f2:   jne    0x000000011b28f702
  0x000000011b28f6f8:   movabs rsi,0x140
  0x000000011b28f702:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011b28f706:   lea    rdi,[rdi+0x1]
  0x000000011b28f70a:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011b28f70e:   jne    0x000000011b28f799
  0x000000011b28f714:   movabs rax,0xa01
  0x000000011b28f71e:   mov    rsi,rax
  0x000000011b28f721:   mov    rax,rcx
  0x000000011b28f724:   imul   rax,rsi
  0x000000011b28f728:   mov    ecx,0x8
  0x000000011b28f72d:   mov    rsi,rax
  0x000000011b28f730:   sar    rsi,cl
  0x000000011b28f733:   movabs rdi,0xff000000ff
  0x000000011b28f73d:   mov    rax,rsi
  0x000000011b28f740:   and    rax,rdi
  0x000000011b28f743:   movabs rcx,0xf424000000064
  0x000000011b28f74d:   imul   rax,rcx
  0x000000011b28f751:   mov    rbx,rax
  0x000000011b28f754:   mov    ecx,0x10
  0x000000011b28f759:   shr    rsi,cl
  0x000000011b28f75c:   and    rsi,rdi
  0x000000011b28f75f:   movabs rax,0x271000000001
  0x000000011b28f769:   mov    rcx,rax
  0x000000011b28f76c:   mov    rax,rsi
  0x000000011b28f76f:   imul   rax,rcx
  0x000000011b28f773:   add    rbx,rax
  0x000000011b28f776:   mov    ecx,0x20
  0x000000011b28f77b:   shr    rbx,cl
  0x000000011b28f77e:   mov    ebx,ebx
  0x000000011b28f780:   mov    rax,rbx
  0x000000011b28f783:   add    rsp,0xd0
  0x000000011b28f78a:   pop    rbp
  0x000000011b28f78b:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011b28f792:   ja     0x000000011b28f8db
  0x000000011b28f798:   ret
  0x000000011b28f799:   mov    eax,0xffffffff
  0x000000011b28f79e:   add    rsp,0xd0
  0x000000011b28f7a5:   pop    rbp
  0x000000011b28f7a6:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011b28f7ad:   ja     0x000000011b28f8f1
  0x000000011b28f7b3:   ret
  0x000000011b28f7b4:   movabs r10,0x13d42f7c0              ;   {metadata({method} {0x000000013d42f7c0} 'tryToParseEightDigitsSwarIndependentMultiplications' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011b28f7be:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28f7c3:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b28f7cb:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@-1 (line 620)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28f7d0:   jmp    0x000000011b28f25c
  0x000000011b28f7d5:   movabs r10,0x800154248              ;   {metadata({method} {0x0000000800154248} 'guard_LI_J' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;ILjava/lang/invoke/VarHandle$AccessDescriptor;)J' in 'java/lang/invoke/VarHandleGuards')}
  0x000000011b28f7df:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28f7e4:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b28f7ec:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@-1 (line 796)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28f7f1:   jmp    0x000000011b28f2e8
  0x000000011b28f7f6:   movabs r10,0x8000b1ce0              ;   {metadata({method} {0x00000008000b1ce0} 'checkExactAccessMode' '(Ljava/lang/invoke/VarHandle$AccessDescriptor;)V' in 'java/lang/invoke/VarHandle')}
  0x000000011b28f800:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28f805:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b28f80d:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.VarHandle::checkExactAccessMode@-1 (line 2042)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@2 (line 796)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28f812:   jmp    0x000000011b28f34c
  0x000000011b28f817:   movabs r10,0x8000b0808              ;   {metadata({method} {0x00000008000b0808} 'isDirect' '()Z' in 'java/lang/invoke/VarHandle')}
  0x000000011b28f821:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28f826:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b28f82e:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.VarHandle::isDirect@-1 (line 497)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@6 (line 797)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28f833:   jmp    0x000000011b28f429
  0x000000011b28f838:   movabs r10,0x8001511c8              ;   {metadata({method} {0x00000008001511c8} 'getMemberName' '(I)Ljava/lang/invoke/MemberName;' in 'java/lang/invoke/VarForm')}
  0x000000011b28f842:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28f847:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b28f84f:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.VarForm::getMemberName@-1 (line 112)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@42 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28f854:   jmp    0x000000011b28f492
  0x000000011b28f859:   movabs r10,0x800151170              ;   {metadata({method} {0x0000000800151170} 'getMemberNameOrNull' '(I)Ljava/lang/invoke/MemberName;' in 'java/lang/invoke/VarForm')}
  0x000000011b28f863:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28f868:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b28f870:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.VarForm::getMemberNameOrNull@-1 (line 121)
                                                            ; - java.lang.invoke.VarForm::getMemberName@2 (line 112)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@42 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28f875:   jmp    0x000000011b28f4d1
  0x000000011b28f87a:   movabs r10,0x13d229f68              ;   {metadata({method} {0x000000013d229f68} 'get' '(Ljava/lang/invoke/VarHandle;Ljava/lang/Object;I)J' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f884:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28f889:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b28f891:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@-1 (line 113)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28f896:   jmp    0x000000011b28f586
  0x000000011b28f89b:   movabs r10,0x13d229d70              ;   {metadata({method} {0x000000013d229d70} 'index' '([BI)I' in 'java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle')}
  0x000000011b28f8a5:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b28f8aa:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b28f8b2:   call   0x000000011ad18c00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::index@-1 (line 100)
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@19 (line 117)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b28f8b7:   jmp    0x000000011b28f5c5
  0x000000011b28f8bc:   call   0x000000011ad13220           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::index@2 (line 100)
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@19 (line 117)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b28f8c1:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x000000011b28f8c9:   call   0x000000011ad17400           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::index@9 (line 100)
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@19 (line 117)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x000000011b28f8ce:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x000000011b28f8d6:   call   0x000000011ad17400           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::index@9 (line 100)
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@19 (line 117)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x000000011b28f8db:   movabs r10,0x11b28f78b              ;   {internal_word}
  0x000000011b28f8e5:   mov    QWORD PTR [r15+0x350],r10
  0x000000011b28f8ec:   jmp    0x000000011ac72100           ;   {runtime_call SafepointBlob}
  0x000000011b28f8f1:   movabs r10,0x11b28f7a6              ;   {internal_word}
  0x000000011b28f8fb:   mov    QWORD PTR [r15+0x350],r10
  0x000000011b28f902:   jmp    0x000000011ac72100           ;   {runtime_call SafepointBlob}
  0x000000011b28f907:   nop
  0x000000011b28f908:   nop
  0x000000011b28f909:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011b28f910:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011b28f91b:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011b28f926:   add    rsp,0xd0
  0x000000011b28f92d:   pop    rbp
  0x000000011b28f92e:   jmp    0x000000011ad12000           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b28f933:   hlt
  0x000000011b28f934:   hlt
  0x000000011b28f935:   hlt
  0x000000011b28f936:   hlt
  0x000000011b28f937:   hlt
  0x000000011b28f938:   hlt
  0x000000011b28f939:   hlt
  0x000000011b28f93a:   hlt
  0x000000011b28f93b:   hlt
  0x000000011b28f93c:   hlt
  0x000000011b28f93d:   hlt
  0x000000011b28f93e:   hlt
  0x000000011b28f93f:   hlt
[Stub Code]
  0x000000011b28f940:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011b28f945:   movabs rbx,0x8003fe518              ;   {static_stub}
  0x000000011b28f94f:   jmp    0x000000011ac66ee5           ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x000000011b28f954:   call   0x000000011ad15000           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011b28f959:   movabs rdi,0x11071afc1              ;   {external_word}
  0x000000011b28f963:   and    rsp,0xfffffffffffffff0
  0x000000011b28f967:   call   0x00000001103c5290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b28f96c:   hlt
[Deopt Handler Code]
  0x000000011b28f96d:   movabs r10,0x11b28f96d              ;   {section_word}
  0x000000011b28f977:   push   r10
  0x000000011b28f979:   jmp    0x000000011ac713a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b28f97e:   hlt
  0x000000011b28f97f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     304  596       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications (86 bytes)
 total in heap  [0x0000000122731590,0x00000001227319a0] = 1040
 relocation     [0x00000001227316f0,0x0000000122731708] = 24
 main code      [0x0000000122731720,0x0000000122731860] = 320
 stub code      [0x0000000122731860,0x0000000122731878] = 24
 oops           [0x0000000122731878,0x0000000122731898] = 32
 metadata       [0x0000000122731898,0x00000001227318d0] = 56
 scopes data    [0x00000001227318d0,0x0000000122731938] = 104
 scopes pcs     [0x0000000122731938,0x0000000122731988] = 80
 dependencies   [0x0000000122731988,0x0000000122731990] = 8
 nul chk table  [0x0000000122731990,0x00000001227319a0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d42f7c0} 'tryToParseEightDigitsSwarIndependentMultiplications' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000122731720:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122731727:   push   rbp
  0x0000000122731728:   sub    rsp,0x20
  0x000000012273172c:   mov    r10d,DWORD PTR [rsi+0xc]     ; implicit exception: dispatches to 0x0000000122731820
  0x0000000122731730:   add    r10d,0xfffffff9
  0x0000000122731734:   test   r10d,r10d
  0x0000000122731737:   jl     0x0000000122731808
  0x000000012273173d:   data16 xchg ax,ax
  0x0000000122731740:   cmp    edx,r10d
  0x0000000122731743:   jae    0x00000001227317ee
  0x0000000122731749:   mov    r10,QWORD PTR [rsi+rdx*1+0x10]
  0x000000012273174e:   movabs r11,0xcfcfcfcfcfcfcfd0
  0x0000000122731758:   mov    r8,r10
  0x000000012273175b:   add    r8,r11
  0x000000012273175e:   movabs r11,0x8080808080808080
  0x0000000122731768:   movabs r9,0x4646464646464646
  0x0000000122731772:   add    r10,r9
  0x0000000122731775:   or     r10,r8
  0x0000000122731778:   and    r10,r11
  0x000000012273177b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122731780:   test   r10,r10
  0x0000000122731783:   jne    0x00000001227317e7
  0x0000000122731785:   imul   r10,r8,0xa01
  0x000000012273178c:   mov    r11,r10
  0x000000012273178f:   sar    r11,0x8
  0x0000000122731793:   shr    r10,0x8
  0x0000000122731797:   shr    r11,0x10
  0x000000012273179b:   movabs r8,0xff000000ff
  0x00000001227317a5:   and    r10,r8
  0x00000001227317a8:   and    r11,r8
  0x00000001227317ab:   movabs r8,0x271000000001
  0x00000001227317b5:   imul   r11,r8
  0x00000001227317b9:   movabs r8,0xf424000000064
  0x00000001227317c3:   imul   r10,r8
  0x00000001227317c7:   add    r10,r11
  0x00000001227317ca:   shr    r10,0x20
  0x00000001227317ce:   mov    eax,r10d
  0x00000001227317d1:   vzeroupper
  0x00000001227317d4:   add    rsp,0x20
  0x00000001227317d8:   pop    rbp
  0x00000001227317d9:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x00000001227317e0:   ja     0x0000000122731830
  0x00000001227317e6:   ret
  0x00000001227317e7:   mov    eax,0xffffffff
  0x00000001227317ec:   jmp    0x00000001227317d1
  0x00000001227317ee:   mov    rbp,rsi
  0x00000001227317f1:   mov    DWORD PTR [rsp],edx
  0x00000001227317f4:   mov    DWORD PTR [rsp+0x4],r10d
  0x00000001227317f9:   mov    esi,0xffffffe4
  0x00000001227317fe:   xchg   ax,ax
  0x0000000122731800:   vzeroupper
  0x0000000122731803:   call   0x000000011ac71000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::index@9 (line 100)
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@19 (line 117)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122731808:   mov    rbp,rsi
  0x000000012273180b:   mov    DWORD PTR [rsp],edx
  0x000000012273180e:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122731813:   mov    esi,0xffffffcc
  0x0000000122731818:   vzeroupper
  0x000000012273181b:   call   0x000000011ac71000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::index@9 (line 100)
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@19 (line 117)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122731820:   mov    esi,0xffffff5e
  0x0000000122731825:   data16 xchg ax,ax
  0x0000000122731828:   vzeroupper
  0x000000012273182b:   call   0x000000011ac71000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::index@2 (line 100)
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@19 (line 117)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122731830:   movabs r10,0x1227317d9              ;   {internal_word}
  0x000000012273183a:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122731841:   jmp    0x000000011ac72100           ;   {runtime_call SafepointBlob}
  0x0000000122731846:   hlt
  0x0000000122731847:   hlt
  0x0000000122731848:   hlt
  0x0000000122731849:   hlt
  0x000000012273184a:   hlt
  0x000000012273184b:   hlt
  0x000000012273184c:   hlt
  0x000000012273184d:   hlt
  0x000000012273184e:   hlt
  0x000000012273184f:   hlt
  0x0000000122731850:   hlt
  0x0000000122731851:   hlt
  0x0000000122731852:   hlt
  0x0000000122731853:   hlt
  0x0000000122731854:   hlt
  0x0000000122731855:   hlt
  0x0000000122731856:   hlt
  0x0000000122731857:   hlt
  0x0000000122731858:   hlt
  0x0000000122731859:   hlt
  0x000000012273185a:   hlt
  0x000000012273185b:   hlt
  0x000000012273185c:   hlt
  0x000000012273185d:   hlt
  0x000000012273185e:   hlt
  0x000000012273185f:   hlt
[Exception Handler]
  0x0000000122731860:   jmp    0x000000011ad12600           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122731865:   call   0x000000012273186a
  0x000000012273186a:   sub    QWORD PTR [rsp],0x5
  0x000000012273186f:   jmp    0x000000011ac713a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122731874:   hlt
  0x0000000122731875:   hlt
  0x0000000122731876:   hlt
  0x0000000122731877:   hlt
--------------------------------------------------------------------------------
[/Disassembly]
Trying to reach a confidence level of 99.8 % which only deviates by 1 % from the average measured duration.

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     389  858       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd (55 bytes)
 total in heap  [0x000000011b2ed810,0x000000011b2f03b8] = 11176
 relocation     [0x000000011b2ed970,0x000000011b2edc28] = 696
 main code      [0x000000011b2edc40,0x000000011b2ef8a0] = 7264
 stub code      [0x000000011b2ef8a0,0x000000011b2ef990] = 240
 oops           [0x000000011b2ef990,0x000000011b2ef9f8] = 104
 metadata       [0x000000011b2ef9f8,0x000000011b2efae0] = 232
 scopes data    [0x000000011b2efae0,0x000000011b2efed0] = 1008
 scopes pcs     [0x000000011b2efed0,0x000000011b2f0330] = 1120
 dependencies   [0x000000011b2f0330,0x000000011b2f0338] = 8
 nul chk table  [0x000000011b2f0338,0x000000011b2f03b8] = 128

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  #           [sp+0x120]  (sp of caller)
  0x000000011b2edc40:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011b2edc47:   push   rbp
  0x000000011b2edc48:   sub    rsp,0x110
  0x000000011b2edc4f:   mov    rdi,rsi
  0x000000011b2edc52:   movabs rcx,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2edc5c:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011b2edc62:   add    esi,0x2
  0x000000011b2edc65:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011b2edc6b:   and    esi,0x7fe
  0x000000011b2edc71:   cmp    esi,0x0
  0x000000011b2edc74:   je     0x000000011b2ef342
  0x000000011b2edc7a:   movabs rcx,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2edc84:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011b2edc8c:   movabs rcx,0x13d360b38              ;   {metadata(method data for {method} {0x000000013d2ddd30} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edc96:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011b2edc9c:   add    esi,0x2
  0x000000011b2edc9f:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011b2edca5:   and    esi,0x1ffffe
  0x000000011b2edcab:   cmp    esi,0x0
  0x000000011b2edcae:   je     0x000000011b2ef363
  0x000000011b2edcb4:   movabs rcx,0x61f0d16f0              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0d16f0})}
  0x000000011b2edcbe:   movabs rsi,0x13d360b38              ;   {metadata(method data for {method} {0x000000013d2ddd30} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edcc8:   mov    ecx,DWORD PTR [rcx+0x8]
  0x000000011b2edccb:   movabs r10,0x800000000
  0x000000011b2edcd5:   add    rcx,r10
  0x000000011b2edcd8:   cmp    rcx,QWORD PTR [rsi+0x100]
  0x000000011b2edcdf:   jne    0x000000011b2edcee
  0x000000011b2edce1:   add    QWORD PTR [rsi+0x108],0x1
  0x000000011b2edce9:   jmp    0x000000011b2edd54
  0x000000011b2edcee:   cmp    rcx,QWORD PTR [rsi+0x110]
  0x000000011b2edcf5:   jne    0x000000011b2edd04
  0x000000011b2edcf7:   add    QWORD PTR [rsi+0x118],0x1
  0x000000011b2edcff:   jmp    0x000000011b2edd54
  0x000000011b2edd04:   cmp    QWORD PTR [rsi+0x100],0x0
  0x000000011b2edd0f:   jne    0x000000011b2edd28
  0x000000011b2edd11:   mov    QWORD PTR [rsi+0x100],rcx
  0x000000011b2edd18:   mov    QWORD PTR [rsi+0x108],0x1
  0x000000011b2edd23:   jmp    0x000000011b2edd54
  0x000000011b2edd28:   cmp    QWORD PTR [rsi+0x110],0x0
  0x000000011b2edd33:   jne    0x000000011b2edd4c
  0x000000011b2edd35:   mov    QWORD PTR [rsi+0x110],rcx
  0x000000011b2edd3c:   mov    QWORD PTR [rsi+0x118],0x1
  0x000000011b2edd47:   jmp    0x000000011b2edd54
  0x000000011b2edd4c:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2edd54:   mov    ecx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x000000011b2ef384
  0x000000011b2edd57:   movabs rsi,0x13d360b38              ;   {metadata(method data for {method} {0x000000013d2ddd30} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edd61:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011b2edd69:   movabs rsi,0x13d35bee8              ;   {metadata(method data for {method} {0x000000013d22de80} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011b2edd73:   mov    r8d,DWORD PTR [rsi+0xac]
  0x000000011b2edd7a:   add    r8d,0x2
  0x000000011b2edd7e:   mov    DWORD PTR [rsi+0xac],r8d
  0x000000011b2edd85:   and    r8d,0x1ffffe
  0x000000011b2edd8c:   cmp    r8d,0x0
  0x000000011b2edd90:   je     0x000000011b2ef389
  0x000000011b2edd96:   movabs rsi,0x13d35bee8              ;   {metadata(method data for {method} {0x000000013d22de80} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011b2edda0:   add    QWORD PTR [rsi+0x150],0x1
  0x000000011b2edda8:   sub    ecx,0x7
  0x000000011b2eddab:   movabs rsi,0x13d2b98a0              ;   {metadata(method data for {method} {0x0000000800068070} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011b2eddb5:   mov    r8d,DWORD PTR [rsi+0xac]
  0x000000011b2eddbc:   add    r8d,0x2
  0x000000011b2eddc0:   mov    DWORD PTR [rsi+0xac],r8d
  0x000000011b2eddc7:   and    r8d,0x1ffffe
  0x000000011b2eddce:   cmp    r8d,0x0
  0x000000011b2eddd2:   je     0x000000011b2ef3aa
  0x000000011b2eddd8:   movabs rsi,0x13d2b98a0              ;   {metadata(method data for {method} {0x0000000800068070} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011b2edde2:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2eddea:   movabs rsi,0x0                      ;   {oop(NULL)}
  0x000000011b2eddf4:   mov    esi,0x0
  0x000000011b2eddf9:   cmp    edx,esi
  0x000000011b2eddfb:   jl     0x000000011b2ef3cb
  0x000000011b2ede01:   cmp    edx,ecx
  0x000000011b2ede03:   jge    0x000000011b2ef3d8
  0x000000011b2ede09:   mov    rbx,rdx
  0x000000011b2ede0c:   movabs rcx,0x61f0d16f0              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0d16f0})}
  0x000000011b2ede16:   mov    rsi,rcx
  0x000000011b2ede19:   movabs rdx,0x13d360b38              ;   {metadata(method data for {method} {0x000000013d2ddd30} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ede23:   add    QWORD PTR [rdx+0x170],0x1
  0x000000011b2ede2b:   movabs rsi,0x13d35b0e8              ;   {metadata(method data for {method} {0x000000013d2f0350} 'dummyVector' '()Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ede35:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2ede3b:   add    edx,0x2
  0x000000011b2ede3e:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2ede44:   and    edx,0x1ffffe
  0x000000011b2ede4a:   cmp    edx,0x0
  0x000000011b2ede4d:   je     0x000000011b2ef3e5
  0x000000011b2ede53:   movabs rsi,0x13d35b0e8              ;   {metadata(method data for {method} {0x000000013d2f0350} 'dummyVector' '()Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ede5d:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2ede65:   movabs rcx,0x13d357cb0              ;   {metadata(method data for {method} {0x000000013d15b048} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011b2ede6f:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011b2ede75:   add    esi,0x2
  0x000000011b2ede78:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011b2ede7e:   and    esi,0x1ffffe
  0x000000011b2ede84:   cmp    esi,0x0
  0x000000011b2ede87:   je     0x000000011b2ef406
  0x000000011b2ede8d:   movabs rcx,0x13d357cb0              ;   {metadata(method data for {method} {0x000000013d15b048} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011b2ede97:   inc    DWORD PTR [rcx+0x100]
  0x000000011b2ede9d:   movabs rcx,0x61f0db358              ;   {oop(a 'jdk/incubator/vector/Short128Vector'{0x000000061f0db358})}
  0x000000011b2edea7:   mov    rsi,rcx
  0x000000011b2edeaa:   movabs rdx,0x13d360b38              ;   {metadata(method data for {method} {0x000000013d2ddd30} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edeb4:   add    QWORD PTR [rdx+0x1a8],0x1
  0x000000011b2edebc:   movabs rsi,0x13d360d68              ;   {metadata(method data for {method} {0x000000013d306c20} 'fromCharArray0' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011b2edec6:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2edecc:   add    edx,0x2
  0x000000011b2edecf:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2eded5:   and    edx,0x1ffffe
  0x000000011b2ededb:   cmp    edx,0x0
  0x000000011b2edede:   je     0x000000011b2ef427
  0x000000011b2edee4:   mov    rsi,rcx
  0x000000011b2edee7:   movabs rdx,0x13d360d68              ;   {metadata(method data for {method} {0x000000013d306c20} 'fromCharArray0' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011b2edef1:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011b2edef9:   movabs rsi,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edf03:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2edf09:   add    edx,0x2
  0x000000011b2edf0c:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2edf12:   and    edx,0x1ffffe
  0x000000011b2edf18:   cmp    edx,0x0
  0x000000011b2edf1b:   je     0x000000011b2ef448
  0x000000011b2edf21:   movabs rsi,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edf2b:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2edf33:   movabs rcx,0x13d358a40              ;   {metadata(method data for {method} {0x000000013d303578} 'vspecies' '()Ljdk/incubator/vector/ShortVector$ShortSpecies;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011b2edf3d:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011b2edf43:   add    esi,0x2
  0x000000011b2edf46:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011b2edf4c:   and    esi,0x1ffffe
  0x000000011b2edf52:   cmp    esi,0x0
  0x000000011b2edf55:   je     0x000000011b2ef469
  0x000000011b2edf5b:   movabs rcx,0x61f0d16f0              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0d16f0})}
  0x000000011b2edf65:   mov    rsi,rcx
  0x000000011b2edf68:   movabs rdx,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edf72:   add    QWORD PTR [rdx+0x128],0x1
  0x000000011b2edf7a:   mov    rsi,rcx
  0x000000011b2edf7d:   movabs rdx,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edf87:   add    QWORD PTR [rdx+0x160],0x1
  0x000000011b2edf8f:   movabs rsi,0x13d35b260              ;   {metadata(method data for {method} {0x000000013d2ef9d8} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2edf99:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2edf9f:   add    edx,0x2
  0x000000011b2edfa2:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2edfa8:   and    edx,0x1ffffe
  0x000000011b2edfae:   cmp    edx,0x0
  0x000000011b2edfb1:   je     0x000000011b2ef48a
  0x000000011b2edfb7:   movabs rsi,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edfc1:   add    QWORD PTR [rsi+0x198],0x1
  0x000000011b2edfc9:   movabs rcx,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edfd3:   add    QWORD PTR [rcx+0x1d0],0x1
  0x000000011b2edfdb:   movabs rcx,0x13d361130              ;   {metadata(method data for {method} {0x000000013d2e0c80} 'charArrayAddress' '([CI)J' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2edfe5:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011b2edfeb:   add    esi,0x2
  0x000000011b2edfee:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011b2edff4:   and    esi,0x1ffffe
  0x000000011b2edffa:   cmp    esi,0x0
  0x000000011b2edffd:   je     0x000000011b2ef4ab
  0x000000011b2ee003:   movabs rcx,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ee00d:   lea    rcx,[rcx+0x1c8]
  0x000000011b2ee014:   movabs rsi,0x61f0dedd8              ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000061f0dedd8})}
  0x000000011b2ee01e:   mov    rdx,rsi
  0x000000011b2ee021:   test   rdx,rdx
  0x000000011b2ee024:   jne    0x000000011b2ee02a
  0x000000011b2ee026:   or     QWORD PTR [rcx],0x1
  0x000000011b2ee02a:   movabs rcx,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee034:   add    QWORD PTR [rcx+0x1e0],0x1
  0x000000011b2ee03c:   movsxd rdx,ebx
  0x000000011b2ee03f:   mov    ecx,0x1
  0x000000011b2ee044:   shl    rdx,cl
  0x000000011b2ee047:   mov    r9,rdx
  0x000000011b2ee04a:   movabs r10,0x10
  0x000000011b2ee054:   add    r9,r10
  0x000000011b2ee057:   movabs rdx,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ee061:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011b2ee067:   add    ecx,0x2
  0x000000011b2ee06a:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011b2ee070:   and    ecx,0x1ffffe
  0x000000011b2ee076:   cmp    ecx,0x0
  0x000000011b2ee079:   je     0x000000011b2ef4cc
  0x000000011b2ee07f:   movabs rdx,0x13d400c90              ;   {metadata(method data for {method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2ee089:   lea    rdx,[rdx+0x180]
  0x000000011b2ee090:   test   rsi,rsi
  0x000000011b2ee093:   jne    0x000000011b2ee099
  0x000000011b2ee095:   or     QWORD PTR [rdx],0x1
  0x000000011b2ee099:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ee0a3:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011b2ee0ab:   movabs rsi,0x13d400c90              ;   {metadata(method data for {method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2ee0b5:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2ee0bb:   add    edx,0x2
  0x000000011b2ee0be:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2ee0c4:   and    edx,0x1ffffe
  0x000000011b2ee0ca:   cmp    edx,0x0
  0x000000011b2ee0cd:   je     0x000000011b2ef4ed
  0x000000011b2ee0d3:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ee0dd:   lea    rsi,[rsi+0x160]
  0x000000011b2ee0e4:   movabs rdx,0x61f0dec50              ;   {oop(a 'jdk/incubator/vector/ShortVector$$Lambda$80+0x0000000800c20878'{0x000000061f0dec50})}
  0x000000011b2ee0ee:   mov    rcx,rdx
  0x000000011b2ee0f1:   test   rcx,rcx
  0x000000011b2ee0f4:   jne    0x000000011b2ee0fa
  0x000000011b2ee0f6:   or     QWORD PTR [rsi],0x1
  0x000000011b2ee0fa:   movabs rsi,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee104:   lea    rsi,[rsi+0x1f0]
  0x000000011b2ee10b:   test   rdx,rdx
  0x000000011b2ee10e:   jne    0x000000011b2ee116
  0x000000011b2ee110:   or     QWORD PTR [rsi],0x1
  0x000000011b2ee114:   jmp    0x000000011b2ee15c
  0x000000011b2ee116:   movabs rdx,0x800c20878              ;   {metadata('jdk/incubator/vector/ShortVector$$Lambda$80+0x0000000800c20878')}
  0x000000011b2ee120:   xor    rdx,QWORD PTR [rsi]
  0x000000011b2ee123:   test   rdx,0xfffffffffffffffc
  0x000000011b2ee12a:   je     0x000000011b2ee15c
  0x000000011b2ee12c:   test   rdx,0x2
  0x000000011b2ee133:   jne    0x000000011b2ee15c
  0x000000011b2ee135:   cmp    QWORD PTR [rsi],0x0
  0x000000011b2ee13c:   je     0x000000011b2ee159
  0x000000011b2ee13e:   cmp    QWORD PTR [rsi],0x1
  0x000000011b2ee145:   je     0x000000011b2ee159
  0x000000011b2ee147:   xor    rdx,QWORD PTR [rsi]
  0x000000011b2ee14a:   test   rdx,0xfffffffffffffffc
  0x000000011b2ee151:   je     0x000000011b2ee15c
  0x000000011b2ee153:   or     QWORD PTR [rsi],0x2
  0x000000011b2ee157:   jmp    0x000000011b2ee15c
  0x000000011b2ee159:   mov    QWORD PTR [rsi],rdx
  0x000000011b2ee15c:   movabs rsi,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee166:   add    QWORD PTR [rsi+0x200],0x1
  0x000000011b2ee16e:   movabs rdx,0x7ffb00230              ;   {oop(a 'java/lang/Class'{0x00000007ffb00230} = short)}
  0x000000011b2ee178:   movabs rsi,0x61f0d1738              ;   {oop(a 'java/lang/Class'{0x000000061f0d1738} = 'jdk/incubator/vector/Short128Vector')}
  0x000000011b2ee182:   mov    ecx,0x8
  0x000000011b2ee187:   mov    r8,rdi
  0x000000011b2ee18a:   mov    DWORD PTR [rsp],ebx
  0x000000011b2ee18d:   movabs r10,0x61f0d16f0              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0d16f0})}
  0x000000011b2ee197:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ee19c:   movabs r10,0x61f0dec50              ;   {oop(a 'jdk/incubator/vector/ShortVector$$Lambda$80+0x0000000800c20878'{0x000000061f0dec50})}
  0x000000011b2ee1a6:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011b2ee1ab:   nop    DWORD PTR [rax+0x0]
  0x000000011b2ee1af:   call   0x000000011b2e27c0           ; ImmutableOopMap {}
                                                            ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@31 (line 3705)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {static_call}
  0x000000011b2ee1b4:   cmp    rax,0x0
  0x000000011b2ee1b8:   jne    0x000000011b2ee1d0
  0x000000011b2ee1ba:   movabs rbx,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee1c4:   or     BYTE PTR [rbx+0x209],0x1
  0x000000011b2ee1cb:   jmp    0x000000011b2ee2a3
  0x000000011b2ee1d0:   movabs rsi,0x800c7c210              ;   {metadata('jdk/incubator/vector/ShortVector')}
  0x000000011b2ee1da:   mov    ebx,DWORD PTR [rax+0x8]
  0x000000011b2ee1dd:   movabs r10,0x800000000
  0x000000011b2ee1e7:   add    rbx,r10
  0x000000011b2ee1ea:   cmp    rsi,QWORD PTR [rbx+0x58]
  0x000000011b2ee1ee:   jne    0x000000011b2ee287
  0x000000011b2ee1f4:   movabs rbx,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee1fe:   mov    esi,DWORD PTR [rax+0x8]
  0x000000011b2ee201:   movabs r10,0x800000000
  0x000000011b2ee20b:   add    rsi,r10
  0x000000011b2ee20e:   cmp    rsi,QWORD PTR [rbx+0x220]
  0x000000011b2ee215:   jne    0x000000011b2ee224
  0x000000011b2ee217:   add    QWORD PTR [rbx+0x228],0x1
  0x000000011b2ee21f:   jmp    0x000000011b2ee2a3
  0x000000011b2ee224:   cmp    rsi,QWORD PTR [rbx+0x230]
  0x000000011b2ee22b:   jne    0x000000011b2ee23a
  0x000000011b2ee22d:   add    QWORD PTR [rbx+0x238],0x1
  0x000000011b2ee235:   jmp    0x000000011b2ee2a3
  0x000000011b2ee23a:   cmp    QWORD PTR [rbx+0x220],0x0
  0x000000011b2ee245:   jne    0x000000011b2ee25e
  0x000000011b2ee247:   mov    QWORD PTR [rbx+0x220],rsi
  0x000000011b2ee24e:   mov    QWORD PTR [rbx+0x228],0x1
  0x000000011b2ee259:   jmp    0x000000011b2ee2a3
  0x000000011b2ee25e:   cmp    QWORD PTR [rbx+0x230],0x0
  0x000000011b2ee269:   jne    0x000000011b2ee282
  0x000000011b2ee26b:   mov    QWORD PTR [rbx+0x230],rsi
  0x000000011b2ee272:   mov    QWORD PTR [rbx+0x238],0x1
  0x000000011b2ee27d:   jmp    0x000000011b2ee2a3
  0x000000011b2ee282:   jmp    0x000000011b2ee2a3
  0x000000011b2ee287:   movabs rbx,0x13d360e98              ;   {metadata(method data for {method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee291:   sub    QWORD PTR [rbx+0x210],0x1
  0x000000011b2ee299:   jmp    0x000000011b2ef50e
  0x000000011b2ee29e:   jmp    0x000000011b2ee2a3
  0x000000011b2ee2a3:   mov    rdi,rax
  0x000000011b2ee2a6:   cmp    rax,QWORD PTR [rdi]          ; implicit exception: dispatches to 0x000000011b2ef517
  0x000000011b2ee2a9:   mov    rdx,rdi
  0x000000011b2ee2ac:   movabs rsi,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2ee2b6:   add    QWORD PTR [rsi+0x100],0x1
  0x000000011b2ee2be:   movabs rdx,0x13d361250              ;   {metadata(method data for {method} {0x000000013d2d8c28} 'sub' '(S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee2c8:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011b2ee2ce:   add    esi,0x2
  0x000000011b2ee2d1:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011b2ee2d7:   and    esi,0x1ffffe
  0x000000011b2ee2dd:   cmp    esi,0x0
  0x000000011b2ee2e0:   je     0x000000011b2ef51c
  0x000000011b2ee2e6:   mov    rdx,rdi
  0x000000011b2ee2e9:   movabs rsi,0x13d361250              ;   {metadata(method data for {method} {0x000000013d2d8c28} 'sub' '(S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee2f3:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2ee2fb:   movabs rdx,0x13d3613c0              ;   {metadata(method data for {method} {0x000000013d2d74e0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee305:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011b2ee30b:   add    esi,0x2
  0x000000011b2ee30e:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011b2ee314:   and    esi,0x1ffffe
  0x000000011b2ee31a:   cmp    esi,0x0
  0x000000011b2ee31d:   je     0x000000011b2ef53d
  0x000000011b2ee323:   movabs rdx,0x13d3613c0              ;   {metadata(method data for {method} {0x000000013d2d74e0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee32d:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011b2ee335:   movabs rdx,0x13d35ee28              ;   {metadata(method data for {method} {0x000000013d2d4668} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee33f:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011b2ee345:   add    esi,0x2
  0x000000011b2ee348:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011b2ee34e:   and    esi,0x1ffffe
  0x000000011b2ee354:   cmp    esi,0x0
  0x000000011b2ee357:   je     0x000000011b2ef55e
  0x000000011b2ee35d:   movabs rdx,0x13d35ee28              ;   {metadata(method data for {method} {0x000000013d2d4668} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee367:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011b2ee36f:   movabs rdx,0x13d35d368              ;   {metadata(method data for {method} {0x000000013d151740} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators')}
  0x000000011b2ee379:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011b2ee37f:   add    esi,0x2
  0x000000011b2ee382:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011b2ee388:   and    esi,0x1ffffe
  0x000000011b2ee38e:   cmp    esi,0x0
  0x000000011b2ee391:   je     0x000000011b2ef57f
  0x000000011b2ee397:   movabs rdx,0x61f0e28e8              ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000061f0e28e8})}
  0x000000011b2ee3a1:   movabs rsi,0x13d35d368              ;   {metadata(method data for {method} {0x000000013d151740} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators')}
  0x000000011b2ee3ab:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011b2ee3ae:   movabs r10,0x800000000
  0x000000011b2ee3b8:   add    rdx,r10
  0x000000011b2ee3bb:   cmp    rdx,QWORD PTR [rsi+0x138]
  0x000000011b2ee3c2:   jne    0x000000011b2ee3d1
  0x000000011b2ee3c4:   add    QWORD PTR [rsi+0x140],0x1
  0x000000011b2ee3cc:   jmp    0x000000011b2ee437
  0x000000011b2ee3d1:   cmp    rdx,QWORD PTR [rsi+0x148]
  0x000000011b2ee3d8:   jne    0x000000011b2ee3e7
  0x000000011b2ee3da:   add    QWORD PTR [rsi+0x150],0x1
  0x000000011b2ee3e2:   jmp    0x000000011b2ee437
  0x000000011b2ee3e7:   cmp    QWORD PTR [rsi+0x138],0x0
  0x000000011b2ee3f2:   jne    0x000000011b2ee40b
  0x000000011b2ee3f4:   mov    QWORD PTR [rsi+0x138],rdx
  0x000000011b2ee3fb:   mov    QWORD PTR [rsi+0x140],0x1
  0x000000011b2ee406:   jmp    0x000000011b2ee437
  0x000000011b2ee40b:   cmp    QWORD PTR [rsi+0x148],0x0
  0x000000011b2ee416:   jne    0x000000011b2ee42f
  0x000000011b2ee418:   mov    QWORD PTR [rsi+0x148],rdx
  0x000000011b2ee41f:   mov    QWORD PTR [rsi+0x150],0x1
  0x000000011b2ee42a:   jmp    0x000000011b2ee437
  0x000000011b2ee42f:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011b2ee437:   movabs rdx,0x13d35d510              ;   {metadata(method data for {method} {0x000000013d3418f0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl')}
  0x000000011b2ee441:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011b2ee447:   add    esi,0x2
  0x000000011b2ee44a:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011b2ee450:   and    esi,0x1ffffe
  0x000000011b2ee456:   cmp    esi,0x0
  0x000000011b2ee459:   je     0x000000011b2ef5a0
  0x000000011b2ee45f:   movabs rdx,0x13d35d510              ;   {metadata(method data for {method} {0x000000013d3418f0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl')}
  0x000000011b2ee469:   inc    DWORD PTR [rdx+0xf0]
  0x000000011b2ee46f:   movabs rdx,0x13d3613c0              ;   {metadata(method data for {method} {0x000000013d2d74e0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee479:   inc    DWORD PTR [rdx+0x100]
  0x000000011b2ee47f:   movabs rdx,0x13d3613c0              ;   {metadata(method data for {method} {0x000000013d2d74e0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee489:   inc    DWORD PTR [rdx+0x178]
  0x000000011b2ee48f:   mov    rdx,rdi
  0x000000011b2ee492:   movabs rsi,0x13d3613c0              ;   {metadata(method data for {method} {0x000000013d2d74e0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee49c:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011b2ee49f:   movabs r10,0x800000000
  0x000000011b2ee4a9:   add    rdx,r10
  0x000000011b2ee4ac:   cmp    rdx,QWORD PTR [rsi+0x1a8]
  0x000000011b2ee4b3:   jne    0x000000011b2ee4c2
  0x000000011b2ee4b5:   add    QWORD PTR [rsi+0x1b0],0x1
  0x000000011b2ee4bd:   jmp    0x000000011b2ee528
  0x000000011b2ee4c2:   cmp    rdx,QWORD PTR [rsi+0x1b8]
  0x000000011b2ee4c9:   jne    0x000000011b2ee4d8
  0x000000011b2ee4cb:   add    QWORD PTR [rsi+0x1c0],0x1
  0x000000011b2ee4d3:   jmp    0x000000011b2ee528
  0x000000011b2ee4d8:   cmp    QWORD PTR [rsi+0x1a8],0x0
  0x000000011b2ee4e3:   jne    0x000000011b2ee4fc
  0x000000011b2ee4e5:   mov    QWORD PTR [rsi+0x1a8],rdx
  0x000000011b2ee4ec:   mov    QWORD PTR [rsi+0x1b0],0x1
  0x000000011b2ee4f7:   jmp    0x000000011b2ee528
  0x000000011b2ee4fc:   cmp    QWORD PTR [rsi+0x1b8],0x0
  0x000000011b2ee507:   jne    0x000000011b2ee520
  0x000000011b2ee509:   mov    QWORD PTR [rsi+0x1b8],rdx
  0x000000011b2ee510:   mov    QWORD PTR [rsi+0x1c0],0x1
  0x000000011b2ee51b:   jmp    0x000000011b2ee528
  0x000000011b2ee520:   add    QWORD PTR [rsi+0x198],0x1
  0x000000011b2ee528:   mov    edx,0x30
  0x000000011b2ee52d:   mov    rsi,rdi
  0x000000011b2ee530:   mov    QWORD PTR [rsp+0xf0],rdi
  0x000000011b2ee538:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011b2ee53d:   movabs rax,0xffffffffffffffff
  0x000000011b2ee547:   call   0x000000011ac68d60           ; ImmutableOopMap {[240]=Oop }
                                                            ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@42 (line 806)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {virtual_call}
  0x000000011b2ee54c:   mov    rdi,QWORD PTR [rsp+0xf0]
  0x000000011b2ee554:   movabs rdx,0x13d3613c0              ;   {metadata(method data for {method} {0x000000013d2d74e0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ee55e:   mov    edi,DWORD PTR [rdi+0x8]
  0x000000011b2ee561:   movabs r10,0x800000000
  0x000000011b2ee56b:   add    rdi,r10
  0x000000011b2ee56e:   cmp    rdi,QWORD PTR [rdx+0x1e0]
  0x000000011b2ee575:   jne    0x000000011b2ee584
  0x000000011b2ee577:   add    QWORD PTR [rdx+0x1e8],0x1
  0x000000011b2ee57f:   jmp    0x000000011b2ee5ea
  0x000000011b2ee584:   cmp    rdi,QWORD PTR [rdx+0x1f0]
  0x000000011b2ee58b:   jne    0x000000011b2ee59a
  0x000000011b2ee58d:   add    QWORD PTR [rdx+0x1f8],0x1
  0x000000011b2ee595:   jmp    0x000000011b2ee5ea
  0x000000011b2ee59a:   cmp    QWORD PTR [rdx+0x1e0],0x0
  0x000000011b2ee5a5:   jne    0x000000011b2ee5be
  0x000000011b2ee5a7:   mov    QWORD PTR [rdx+0x1e0],rdi
  0x000000011b2ee5ae:   mov    QWORD PTR [rdx+0x1e8],0x1
  0x000000011b2ee5b9:   jmp    0x000000011b2ee5ea
  0x000000011b2ee5be:   cmp    QWORD PTR [rdx+0x1f0],0x0
  0x000000011b2ee5c9:   jne    0x000000011b2ee5e2
  0x000000011b2ee5cb:   mov    QWORD PTR [rdx+0x1f0],rdi
  0x000000011b2ee5d2:   mov    QWORD PTR [rdx+0x1f8],0x1
  0x000000011b2ee5dd:   jmp    0x000000011b2ee5ea
  0x000000011b2ee5e2:   add    QWORD PTR [rdx+0x1d0],0x1
  0x000000011b2ee5ea:   movabs rdx,0x61f0e28e8              ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000061f0e28e8})}
  0x000000011b2ee5f4:   mov    rcx,rax
  0x000000011b2ee5f7:   mov    rsi,QWORD PTR [rsp+0xf0]
  0x000000011b2ee5ff:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011b2ee605:   movabs rax,0xffffffffffffffff
  0x000000011b2ee60f:   call   0x000000011ac68da0           ; ImmutableOopMap {}
                                                            ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@45 (line 806)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {virtual_call}
  0x000000011b2ee614:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011b2ef5c1
  0x000000011b2ee617:   mov    rdx,rax
  0x000000011b2ee61a:   movabs rcx,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2ee624:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011b2ee627:   movabs r10,0x800000000
  0x000000011b2ee631:   add    rdx,r10
  0x000000011b2ee634:   cmp    rdx,QWORD PTR [rcx+0x148]
  0x000000011b2ee63b:   jne    0x000000011b2ee64a
  0x000000011b2ee63d:   add    QWORD PTR [rcx+0x150],0x1
  0x000000011b2ee645:   jmp    0x000000011b2ee6b0
  0x000000011b2ee64a:   cmp    rdx,QWORD PTR [rcx+0x158]
  0x000000011b2ee651:   jne    0x000000011b2ee660
  0x000000011b2ee653:   add    QWORD PTR [rcx+0x160],0x1
  0x000000011b2ee65b:   jmp    0x000000011b2ee6b0
  0x000000011b2ee660:   cmp    QWORD PTR [rcx+0x148],0x0
  0x000000011b2ee66b:   jne    0x000000011b2ee684
  0x000000011b2ee66d:   mov    QWORD PTR [rcx+0x148],rdx
  0x000000011b2ee674:   mov    QWORD PTR [rcx+0x150],0x1
  0x000000011b2ee67f:   jmp    0x000000011b2ee6b0
  0x000000011b2ee684:   cmp    QWORD PTR [rcx+0x158],0x0
  0x000000011b2ee68f:   jne    0x000000011b2ee6a8
  0x000000011b2ee691:   mov    QWORD PTR [rcx+0x158],rdx
  0x000000011b2ee698:   mov    QWORD PTR [rcx+0x160],0x1
  0x000000011b2ee6a3:   jmp    0x000000011b2ee6b0
  0x000000011b2ee6a8:   add    QWORD PTR [rcx+0x138],0x1
  0x000000011b2ee6b0:   movabs rdx,0x61f0e3e90              ;   {oop(a 'jdk/incubator/vector/VectorOperators$ComparisonImpl'{0x000000061f0e3e90})}
  0x000000011b2ee6ba:   movabs rcx,0x9
  0x000000011b2ee6c4:   mov    rsi,rax
  0x000000011b2ee6c7:   mov    QWORD PTR [rsp+0xf8],rax
  0x000000011b2ee6cf:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011b2ee6d5:   movabs rax,0xffffffffffffffff
  0x000000011b2ee6df:   call   0x000000011ac68de0           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokevirtual compare {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@21 (line 603)
                                                            ;   {virtual_call}
  0x000000011b2ee6e4:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011b2ef5c6
  0x000000011b2ee6e7:   mov    rsi,rax
  0x000000011b2ee6ea:   movabs rdx,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2ee6f4:   add    QWORD PTR [rdx+0x170],0x1
  0x000000011b2ee6fc:   movabs rsi,0x13d361618              ;   {metadata(method data for {method} {0x000000013d30d268} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee706:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2ee70c:   add    edx,0x2
  0x000000011b2ee70f:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2ee715:   and    edx,0x1ffffe
  0x000000011b2ee71b:   cmp    edx,0x0
  0x000000011b2ee71e:   je     0x000000011b2ef5cb
  0x000000011b2ee724:   mov    rsi,rax
  0x000000011b2ee727:   movabs rdx,0x13d361618              ;   {metadata(method data for {method} {0x000000013d30d268} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee731:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011b2ee739:   movabs rsi,0x13d3617e8              ;   {metadata(method data for {method} {0x000000013d30c3f0} 'vspecies' '()Ljdk/incubator/vector/ShortVector$ShortSpecies;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee743:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2ee749:   add    edx,0x2
  0x000000011b2ee74c:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2ee752:   and    edx,0x1ffffe
  0x000000011b2ee758:   cmp    edx,0x0
  0x000000011b2ee75b:   je     0x000000011b2ef5ec
  0x000000011b2ee761:   movabs rsi,0x61f0d16f0              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0d16f0})}
  0x000000011b2ee76b:   mov    rdx,rsi
  0x000000011b2ee76e:   movabs rcx,0x13d361618              ;   {metadata(method data for {method} {0x000000013d30d268} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee778:   add    QWORD PTR [rcx+0x128],0x1
  0x000000011b2ee780:   movabs rdx,0x13d3618f8              ;   {metadata(method data for {method} {0x000000013d2f0d88} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ee78a:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011b2ee790:   add    ecx,0x2
  0x000000011b2ee793:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011b2ee799:   and    ecx,0x1ffffe
  0x000000011b2ee79f:   cmp    ecx,0x0
  0x000000011b2ee7a2:   je     0x000000011b2ef60d
  0x000000011b2ee7a8:   movabs rdx,0x13d3618f8              ;   {metadata(method data for {method} {0x000000013d2f0d88} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ee7b2:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011b2ee7ba:   movabs rsi,0x13d3618f8              ;   {metadata(method data for {method} {0x000000013d2f0d88} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ee7c4:   inc    DWORD PTR [rsi+0x128]
  0x000000011b2ee7ca:   movabs rsi,0x61f0d16f0              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0d16f0})}
  0x000000011b2ee7d4:   movabs rdx,0x13d3618f8              ;   {metadata(method data for {method} {0x000000013d2f0d88} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ee7de:   add    QWORD PTR [rdx+0x158],0x1
  0x000000011b2ee7e6:   movabs rsi,0x13d3618f8              ;   {metadata(method data for {method} {0x000000013d2f0d88} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ee7f0:   add    QWORD PTR [rsi+0x200],0x1
  0x000000011b2ee7f8:   movabs rsi,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee802:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2ee808:   add    edx,0x2
  0x000000011b2ee80b:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2ee811:   and    edx,0x1ffffe
  0x000000011b2ee817:   cmp    edx,0x0
  0x000000011b2ee81a:   je     0x000000011b2ef62e
  0x000000011b2ee820:   movabs rsi,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee82a:   inc    DWORD PTR [rsi+0x100]
  0x000000011b2ee830:   movabs rsi,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee83a:   inc    DWORD PTR [rsi+0x110]
  0x000000011b2ee840:   mov    QWORD PTR [rsp+0x100],rax
  0x000000011b2ee848:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ee852:   lea    rsi,[rsi+0x1c8]
  0x000000011b2ee859:   movabs rdx,0x61f14f0f8              ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000061f14f0f8})}
  0x000000011b2ee863:   mov    rcx,rdx
  0x000000011b2ee866:   test   rcx,rcx
  0x000000011b2ee869:   jne    0x000000011b2ee86f
  0x000000011b2ee86b:   or     QWORD PTR [rsi],0x1
  0x000000011b2ee86f:   movabs rsi,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee879:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011b2ee881:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ee88b:   mov    ecx,DWORD PTR [rsi+0xac]
  0x000000011b2ee891:   add    ecx,0x2
  0x000000011b2ee894:   mov    DWORD PTR [rsi+0xac],ecx
  0x000000011b2ee89a:   and    ecx,0x1ffffe
  0x000000011b2ee8a0:   cmp    ecx,0x0
  0x000000011b2ee8a3:   je     0x000000011b2ef64f
  0x000000011b2ee8a9:   movabs rsi,0x13d400c90              ;   {metadata(method data for {method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2ee8b3:   lea    rsi,[rsi+0x180]
  0x000000011b2ee8ba:   test   rdx,rdx
  0x000000011b2ee8bd:   jne    0x000000011b2ee8c3
  0x000000011b2ee8bf:   or     QWORD PTR [rsi],0x1
  0x000000011b2ee8c3:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ee8cd:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011b2ee8d5:   movabs rsi,0x13d400c90              ;   {metadata(method data for {method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2ee8df:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2ee8e5:   add    edx,0x2
  0x000000011b2ee8e8:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2ee8ee:   and    edx,0x1ffffe
  0x000000011b2ee8f4:   cmp    edx,0x0
  0x000000011b2ee8f7:   je     0x000000011b2ef670
  0x000000011b2ee8fd:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ee907:   lea    rsi,[rsi+0x160]
  0x000000011b2ee90e:   movabs rdi,0x61f14eff0              ;   {oop(a 'jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$89+0x0000000800c25ee0'{0x000000061f14eff0})}
  0x000000011b2ee918:   mov    rdx,rdi
  0x000000011b2ee91b:   test   rdx,rdx
  0x000000011b2ee91e:   jne    0x000000011b2ee924
  0x000000011b2ee920:   or     QWORD PTR [rsi],0x1
  0x000000011b2ee924:   movabs rsi,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee92e:   lea    rsi,[rsi+0x138]
  0x000000011b2ee935:   mov    rdx,rdi
  0x000000011b2ee938:   test   rdx,rdx
  0x000000011b2ee93b:   jne    0x000000011b2ee943
  0x000000011b2ee93d:   or     QWORD PTR [rsi],0x1
  0x000000011b2ee941:   jmp    0x000000011b2ee989
  0x000000011b2ee943:   movabs rdx,0x800c25ee0              ;   {metadata('jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$89+0x0000000800c25ee0')}
  0x000000011b2ee94d:   xor    rdx,QWORD PTR [rsi]
  0x000000011b2ee950:   test   rdx,0xfffffffffffffffc
  0x000000011b2ee957:   je     0x000000011b2ee989
  0x000000011b2ee959:   test   rdx,0x2
  0x000000011b2ee960:   jne    0x000000011b2ee989
  0x000000011b2ee962:   cmp    QWORD PTR [rsi],0x0
  0x000000011b2ee969:   je     0x000000011b2ee986
  0x000000011b2ee96b:   cmp    QWORD PTR [rsi],0x1
  0x000000011b2ee972:   je     0x000000011b2ee986
  0x000000011b2ee974:   xor    rdx,QWORD PTR [rsi]
  0x000000011b2ee977:   test   rdx,0xfffffffffffffffc
  0x000000011b2ee97e:   je     0x000000011b2ee989
  0x000000011b2ee980:   or     QWORD PTR [rsi],0x2
  0x000000011b2ee984:   jmp    0x000000011b2ee989
  0x000000011b2ee986:   mov    QWORD PTR [rsi],rdx
  0x000000011b2ee989:   movabs rsi,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee993:   add    QWORD PTR [rsi+0x148],0x1
  0x000000011b2ee99b:   movabs rsi,0x61f0d17d8              ;   {oop(a 'java/lang/Class'{0x000000061f0d17d8} = 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee9a5:   movabs rdx,0x7ffb00230              ;   {oop(a 'java/lang/Class'{0x00000007ffb00230} = short)}
  0x000000011b2ee9af:   movabs r8,0xffffffffffffffff
  0x000000011b2ee9b9:   mov    ecx,0x8
  0x000000011b2ee9be:   movabs r9,0x0                       ;   {oop(NULL)}
  0x000000011b2ee9c8:   nop    DWORD PTR [rax+0x0]
  0x000000011b2ee9cf:   call   0x000000011b2dd7c0           ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@24 (line 744)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {static_call}
  0x000000011b2ee9d4:   cmp    rax,0x0
  0x000000011b2ee9d8:   jne    0x000000011b2ee9f0
  0x000000011b2ee9da:   movabs rcx,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee9e4:   or     BYTE PTR [rcx+0x151],0x1
  0x000000011b2ee9eb:   jmp    0x000000011b2eeac2
  0x000000011b2ee9f0:   movabs rdx,0x800c7de68              ;   {metadata('jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ee9fa:   mov    esi,DWORD PTR [rax+0x8]
  0x000000011b2ee9fd:   movabs r10,0x800000000
  0x000000011b2eea07:   add    rsi,r10
  0x000000011b2eea0a:   cmp    rdx,rsi
  0x000000011b2eea0d:   jne    0x000000011b2eeaa6
  0x000000011b2eea13:   movabs rcx,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2eea1d:   mov    edx,DWORD PTR [rax+0x8]
  0x000000011b2eea20:   movabs r10,0x800000000
  0x000000011b2eea2a:   add    rdx,r10
  0x000000011b2eea2d:   cmp    rdx,QWORD PTR [rcx+0x168]
  0x000000011b2eea34:   jne    0x000000011b2eea43
  0x000000011b2eea36:   add    QWORD PTR [rcx+0x170],0x1
  0x000000011b2eea3e:   jmp    0x000000011b2eeac2
  0x000000011b2eea43:   cmp    rdx,QWORD PTR [rcx+0x178]
  0x000000011b2eea4a:   jne    0x000000011b2eea59
  0x000000011b2eea4c:   add    QWORD PTR [rcx+0x180],0x1
  0x000000011b2eea54:   jmp    0x000000011b2eeac2
  0x000000011b2eea59:   cmp    QWORD PTR [rcx+0x168],0x0
  0x000000011b2eea64:   jne    0x000000011b2eea7d
  0x000000011b2eea66:   mov    QWORD PTR [rcx+0x168],rdx
  0x000000011b2eea6d:   mov    QWORD PTR [rcx+0x170],0x1
  0x000000011b2eea78:   jmp    0x000000011b2eeac2
  0x000000011b2eea7d:   cmp    QWORD PTR [rcx+0x178],0x0
  0x000000011b2eea88:   jne    0x000000011b2eeaa1
  0x000000011b2eea8a:   mov    QWORD PTR [rcx+0x178],rdx
  0x000000011b2eea91:   mov    QWORD PTR [rcx+0x180],0x1
  0x000000011b2eea9c:   jmp    0x000000011b2eeac2
  0x000000011b2eeaa1:   jmp    0x000000011b2eeac2
  0x000000011b2eeaa6:   movabs rcx,0x13d361b80              ;   {metadata(method data for {method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2eeab0:   sub    QWORD PTR [rcx+0x158],0x1
  0x000000011b2eeab8:   jmp    0x000000011b2ef691
  0x000000011b2eeabd:   jmp    0x000000011b2eeac2
  0x000000011b2eeac2:   mov    rdi,rax
  0x000000011b2eeac5:   mov    rax,QWORD PTR [rsp+0x100]
  0x000000011b2eeacd:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2eead7:   lea    rsi,[rsi+0x1c8]
  0x000000011b2eeade:   movabs rdx,0x61f152378              ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000061f152378})}
  0x000000011b2eeae8:   mov    rcx,rdx
  0x000000011b2eeaeb:   test   rcx,rcx
  0x000000011b2eeaee:   jne    0x000000011b2eeaf4
  0x000000011b2eeaf0:   or     QWORD PTR [rsi],0x1
  0x000000011b2eeaf4:   movabs rsi,0x13d361618              ;   {metadata(method data for {method} {0x000000013d30d268} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2eeafe:   add    QWORD PTR [rsi+0x160],0x1
  0x000000011b2eeb06:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2eeb10:   mov    ecx,DWORD PTR [rsi+0xac]
  0x000000011b2eeb16:   add    ecx,0x2
  0x000000011b2eeb19:   mov    DWORD PTR [rsi+0xac],ecx
  0x000000011b2eeb1f:   and    ecx,0x1ffffe
  0x000000011b2eeb25:   cmp    ecx,0x0
  0x000000011b2eeb28:   je     0x000000011b2ef69a
  0x000000011b2eeb2e:   movabs rsi,0x13d400c90              ;   {metadata(method data for {method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2eeb38:   lea    rsi,[rsi+0x180]
  0x000000011b2eeb3f:   test   rdx,rdx
  0x000000011b2eeb42:   jne    0x000000011b2eeb48
  0x000000011b2eeb44:   or     QWORD PTR [rsi],0x1
  0x000000011b2eeb48:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2eeb52:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011b2eeb5a:   movabs rsi,0x13d400c90              ;   {metadata(method data for {method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2eeb64:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2eeb6a:   add    edx,0x2
  0x000000011b2eeb6d:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2eeb73:   and    edx,0x1ffffe
  0x000000011b2eeb79:   cmp    edx,0x0
  0x000000011b2eeb7c:   je     0x000000011b2ef6bb
  0x000000011b2eeb82:   movabs rsi,0x13d357550              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2eeb8c:   lea    rsi,[rsi+0x160]
  0x000000011b2eeb93:   movabs rdx,0x61f1521f0              ;   {oop(a 'jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$90+0x0000000800c260e8'{0x000000061f1521f0})}
  0x000000011b2eeb9d:   mov    rcx,rdx
  0x000000011b2eeba0:   test   rcx,rcx
  0x000000011b2eeba3:   jne    0x000000011b2eeba9
  0x000000011b2eeba5:   or     QWORD PTR [rsi],0x1
  0x000000011b2eeba9:   movabs rsi,0x13d361618              ;   {metadata(method data for {method} {0x000000013d30d268} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2eebb3:   lea    rsi,[rsi+0x170]
  0x000000011b2eebba:   test   rdx,rdx
  0x000000011b2eebbd:   jne    0x000000011b2eebc5
  0x000000011b2eebbf:   or     QWORD PTR [rsi],0x1
  0x000000011b2eebc3:   jmp    0x000000011b2eec0b
  0x000000011b2eebc5:   movabs rdx,0x800c260e8              ;   {metadata('jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$90+0x0000000800c260e8')}
  0x000000011b2eebcf:   xor    rdx,QWORD PTR [rsi]
  0x000000011b2eebd2:   test   rdx,0xfffffffffffffffc
  0x000000011b2eebd9:   je     0x000000011b2eec0b
  0x000000011b2eebdb:   test   rdx,0x2
  0x000000011b2eebe2:   jne    0x000000011b2eec0b
  0x000000011b2eebe4:   cmp    QWORD PTR [rsi],0x0
  0x000000011b2eebeb:   je     0x000000011b2eec08
  0x000000011b2eebed:   cmp    QWORD PTR [rsi],0x1
  0x000000011b2eebf4:   je     0x000000011b2eec08
  0x000000011b2eebf6:   xor    rdx,QWORD PTR [rsi]
  0x000000011b2eebf9:   test   rdx,0xfffffffffffffffc
  0x000000011b2eec00:   je     0x000000011b2eec0b
  0x000000011b2eec02:   or     QWORD PTR [rsi],0x2
  0x000000011b2eec06:   jmp    0x000000011b2eec0b
  0x000000011b2eec08:   mov    QWORD PTR [rsi],rdx
  0x000000011b2eec0b:   movabs rsi,0x13d361618              ;   {metadata(method data for {method} {0x000000013d30d268} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2eec15:   add    QWORD PTR [rsi+0x180],0x1
  0x000000011b2eec1d:   movabs rdx,0x61f0d17d8              ;   {oop(a 'java/lang/Class'{0x000000061f0d17d8} = 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2eec27:   movabs rcx,0x7ffb00230              ;   {oop(a 'java/lang/Class'{0x00000007ffb00230} = short)}
  0x000000011b2eec31:   mov    esi,0x4
  0x000000011b2eec36:   mov    r8d,0x8
  0x000000011b2eec3c:   mov    r9,rax
  0x000000011b2eec3f:   movabs r10,0x61f1521f0              ;   {oop(a 'jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$90+0x0000000800c260e8'{0x000000061f1521f0})}
  0x000000011b2eec49:   mov    QWORD PTR [rsp],r10
  0x000000011b2eec4d:   xchg   ax,ax
  0x000000011b2eec4f:   call   0x000000011b2ef8f5           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokestatic test {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@23 (line 728)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {static_call}
  0x000000011b2eec54:   and    eax,0x1
  0x000000011b2eec57:   cmp    eax,0x0
  0x000000011b2eec5a:   movabs rsi,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2eec64:   movabs rdi,0x1b8
  0x000000011b2eec6e:   jne    0x000000011b2eec7e
  0x000000011b2eec74:   movabs rdi,0x1a8
  0x000000011b2eec7e:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011b2eec82:   lea    rbx,[rbx+0x1]
  0x000000011b2eec86:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011b2eec8a:   jne    0x000000011b2ef322
  0x000000011b2eec90:   mov    rax,QWORD PTR [rsp+0xf8]
  0x000000011b2eec98:   movabs rsi,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2eeca2:   add    QWORD PTR [rsi+0x1c8],0x1
  0x000000011b2eecaa:   movabs rsi,0x13d361fb8              ;   {metadata(method data for {method} {0x000000013d143710} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011b2eecb4:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011b2eecba:   add    edi,0x2
  0x000000011b2eecbd:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011b2eecc3:   and    edi,0x1ffffe
  0x000000011b2eecc9:   cmp    edi,0x0
  0x000000011b2eeccc:   je     0x000000011b2ef6dc
  0x000000011b2eecd2:   mov    rax,QWORD PTR [rsp+0xf8]
  0x000000011b2eecda:   movabs rsi,0x13d361fb8              ;   {metadata(method data for {method} {0x000000013d143710} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011b2eece4:   mov    eax,DWORD PTR [rax+0x8]
  0x000000011b2eece7:   movabs r10,0x800000000
  0x000000011b2eecf1:   add    rax,r10
  0x000000011b2eecf4:   cmp    rax,QWORD PTR [rsi+0x100]
  0x000000011b2eecfb:   jne    0x000000011b2eed0a
  0x000000011b2eecfd:   add    QWORD PTR [rsi+0x108],0x1
  0x000000011b2eed05:   jmp    0x000000011b2eed70
  0x000000011b2eed0a:   cmp    rax,QWORD PTR [rsi+0x110]
  0x000000011b2eed11:   jne    0x000000011b2eed20
  0x000000011b2eed13:   add    QWORD PTR [rsi+0x118],0x1
  0x000000011b2eed1b:   jmp    0x000000011b2eed70
  0x000000011b2eed20:   cmp    QWORD PTR [rsi+0x100],0x0
  0x000000011b2eed2b:   jne    0x000000011b2eed44
  0x000000011b2eed2d:   mov    QWORD PTR [rsi+0x100],rax
  0x000000011b2eed34:   mov    QWORD PTR [rsi+0x108],0x1
  0x000000011b2eed3f:   jmp    0x000000011b2eed70
  0x000000011b2eed44:   cmp    QWORD PTR [rsi+0x110],0x0
  0x000000011b2eed4f:   jne    0x000000011b2eed68
  0x000000011b2eed51:   mov    QWORD PTR [rsi+0x110],rax
  0x000000011b2eed58:   mov    QWORD PTR [rsi+0x118],0x1
  0x000000011b2eed63:   jmp    0x000000011b2eed70
  0x000000011b2eed68:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2eed70:   mov    rsi,QWORD PTR [rsp+0xf8]
  0x000000011b2eed78:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011b2eed7d:   movabs rax,0x800c7d7e0
  0x000000011b2eed87:   call   0x000000011b2dfb40           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@1 (line 282)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {virtual_call}
  0x000000011b2eed8c:   mov    edi,DWORD PTR [rax+0x28]     ; implicit exception: dispatches to 0x000000011b2ef6fd
  0x000000011b2eed8f:   shl    rdi,0x3
  0x000000011b2eed93:   movabs rsi,0x13d361fb8              ;   {metadata(method data for {method} {0x000000013d143710} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011b2eed9d:   add    QWORD PTR [rsi+0x160],0x1
  0x000000011b2eeda5:   movabs rsi,0x13d3621b0              ;   {metadata(method data for {method} {0x000000013d348310} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eedaf:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2eedb5:   add    edx,0x2
  0x000000011b2eedb8:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2eedbe:   and    edx,0x1ffffe
  0x000000011b2eedc4:   cmp    edx,0x0
  0x000000011b2eedc7:   je     0x000000011b2ef702
  0x000000011b2eedcd:   movabs rsi,0x6003df718              ;   {oop(a 'jdk/incubator/vector/LaneType'{0x00000006003df718})}
  0x000000011b2eedd7:   cmp    rdi,rsi
  0x000000011b2eedda:   movabs rsi,0x13d3621b0              ;   {metadata(method data for {method} {0x000000013d348310} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eede4:   movabs rdx,0xf0
  0x000000011b2eedee:   jne    0x000000011b2eedfe
  0x000000011b2eedf4:   movabs rdx,0x100
  0x000000011b2eedfe:   mov    rcx,QWORD PTR [rsi+rdx*1]
  0x000000011b2eee02:   lea    rcx,[rcx+0x1]
  0x000000011b2eee06:   mov    QWORD PTR [rsi+rdx*1],rcx
  0x000000011b2eee0a:   jne    0x000000011b2eef8c
  0x000000011b2eee10:   movabs rsi,0x13d3621b0              ;   {metadata(method data for {method} {0x000000013d348310} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eee1a:   add    QWORD PTR [rsi+0x110],0x1
  0x000000011b2eee22:   movabs rsi,0x13d362328              ;   {metadata(method data for {method} {0x000000013d348250} 'ofCopy' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eee2c:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2eee32:   add    edx,0x2
  0x000000011b2eee35:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2eee3b:   and    edx,0x1ffffe
  0x000000011b2eee41:   cmp    edx,0x0
  0x000000011b2eee44:   je     0x000000011b2ef723
  0x000000011b2eee4a:   movabs rsi,0x13d362328              ;   {metadata(method data for {method} {0x000000013d348250} 'ofCopy' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eee54:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2eee5c:   movabs rsi,0x13d362468              ;   {metadata(method data for {method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eee66:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2eee6c:   add    edx,0x2
  0x000000011b2eee6f:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2eee75:   and    edx,0x1ffffe
  0x000000011b2eee7b:   cmp    edx,0x0
  0x000000011b2eee7e:   je     0x000000011b2ef744
  0x000000011b2eee84:   movabs rsi,0x13d362468              ;   {metadata(method data for {method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eee8e:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2eee96:   movabs rsi,0x13d35e300              ;   {metadata(method data for {method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eeea0:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2eeea6:   add    edx,0x2
  0x000000011b2eeea9:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2eeeaf:   and    edx,0x1ffffe
  0x000000011b2eeeb5:   cmp    edx,0x0
  0x000000011b2eeeb8:   je     0x000000011b2ef765
  0x000000011b2eeebe:   movabs rsi,0x13d35e300              ;   {metadata(method data for {method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eeec8:   inc    DWORD PTR [rsi+0xf0]
  0x000000011b2eeece:   movabs rsi,0x13d35e300              ;   {metadata(method data for {method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eeed8:   inc    DWORD PTR [rsi+0x188]
  0x000000011b2eeede:   movabs rsi,0x13d35e300              ;   {metadata(method data for {method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eeee8:   inc    DWORD PTR [rsi+0x198]
  0x000000011b2eeeee:   mov    esi,DWORD PTR [rdi+0x20]     ; implicit exception: dispatches to 0x000000011b2ef786
  0x000000011b2eeef1:   mov    edx,0x7
  0x000000011b2eeef6:   movabs rcx,0x61f115290              ;   {oop(a 'jdk/incubator/vector/VectorOperators$ConversionImpl'[][7] {0x000000061f115290})}
  0x000000011b2eef00:   cmp    edx,esi
  0x000000011b2eef02:   jbe    0x000000011b2ef78b
  0x000000011b2eef08:   movsxd rdx,esi
  0x000000011b2eef0b:   mov    edx,DWORD PTR [rcx+rdx*4+0x10]; implicit exception: dispatches to 0x000000011b2ef799
  0x000000011b2eef0f:   shl    rdx,0x3
  0x000000011b2eef13:   cmp    esi,DWORD PTR [rdx+0xc]      ; implicit exception: dispatches to 0x000000011b2ef79e
  0x000000011b2eef16:   jae    0x000000011b2ef7a8
  0x000000011b2eef1c:   movsxd rsi,esi
  0x000000011b2eef1f:   mov    esi,DWORD PTR [rdx+rsi*4+0x10]
  0x000000011b2eef23:   shl    rsi,0x3
  0x000000011b2eef27:   cmp    rsi,0x0
  0x000000011b2eef2b:   movabs rdx,0x13d362468              ;   {metadata(method data for {method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eef35:   movabs rcx,0x110
  0x000000011b2eef3f:   jne    0x000000011b2eef4f
  0x000000011b2eef45:   movabs rcx,0x100
  0x000000011b2eef4f:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x000000011b2eef53:   lea    rbx,[rbx+0x1]
  0x000000011b2eef57:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x000000011b2eef5b:   jne    0x000000011b2ef0cf
  0x000000011b2eef61:   movabs rsi,0x13d362468              ;   {metadata(method data for {method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eef6b:   add    QWORD PTR [rsi+0x120],0x1
  0x000000011b2eef73:   mov    esi,0x49
  0x000000011b2eef78:   mov    rdx,rdi
  0x000000011b2eef7b:   mov    rcx,rdi
  0x000000011b2eef7e:   nop
  0x000000011b2eef7f:   call   0x000000011ac6c080           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokestatic makeConv {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@29 (line 1008)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {static_call}
  0x000000011b2eef84:   mov    rsi,rax
  0x000000011b2eef87:   jmp    0x000000011b2ef0cf
  0x000000011b2eef8c:   movabs rsi,0x13d3621b0              ;   {metadata(method data for {method} {0x000000013d348310} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eef96:   add    QWORD PTR [rsi+0x120],0x1
  0x000000011b2eef9e:   movabs rsi,0x13d362468              ;   {metadata(method data for {method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eefa8:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2eefae:   add    edx,0x2
  0x000000011b2eefb1:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2eefb7:   and    edx,0x1ffffe
  0x000000011b2eefbd:   cmp    edx,0x0
  0x000000011b2eefc0:   je     0x000000011b2ef7b6
  0x000000011b2eefc6:   movabs rsi,0x13d362468              ;   {metadata(method data for {method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eefd0:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011b2eefd8:   movabs rsi,0x13d35e300              ;   {metadata(method data for {method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2eefe2:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011b2eefe8:   add    edx,0x2
  0x000000011b2eefeb:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011b2eeff1:   and    edx,0x1ffffe
  0x000000011b2eeff7:   cmp    edx,0x0
  0x000000011b2eeffa:   je     0x000000011b2ef7d7
  0x000000011b2ef000:   movabs rsi,0x13d35e300              ;   {metadata(method data for {method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef00a:   inc    DWORD PTR [rsi+0xf0]
  0x000000011b2ef010:   movabs rsi,0x13d35e300              ;   {metadata(method data for {method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef01a:   inc    DWORD PTR [rsi+0x188]
  0x000000011b2ef020:   movabs rsi,0x13d35e300              ;   {metadata(method data for {method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef02a:   inc    DWORD PTR [rsi+0x198]
  0x000000011b2ef030:   mov    esi,DWORD PTR [rdi+0x20]     ; implicit exception: dispatches to 0x000000011b2ef7f8
  0x000000011b2ef033:   mov    edx,0x7
  0x000000011b2ef038:   movabs rcx,0x61f115290              ;   {oop(a 'jdk/incubator/vector/VectorOperators$ConversionImpl'[][7] {0x000000061f115290})}
  0x000000011b2ef042:   cmp    edx,esi
  0x000000011b2ef044:   jbe    0x000000011b2ef7fd
  0x000000011b2ef04a:   movsxd rsi,esi
  0x000000011b2ef04d:   mov    esi,DWORD PTR [rcx+rsi*4+0x10]; implicit exception: dispatches to 0x000000011b2ef80b
  0x000000011b2ef051:   shl    rsi,0x3
  0x000000011b2ef055:   cmp    DWORD PTR [rsi+0xc],0x5      ; implicit exception: dispatches to 0x000000011b2ef810
  0x000000011b2ef05c:   jbe    0x000000011b2ef81a
  0x000000011b2ef062:   mov    esi,DWORD PTR [rsi+0x24]
  0x000000011b2ef065:   shl    rsi,0x3
  0x000000011b2ef069:   cmp    rsi,0x0
  0x000000011b2ef06d:   movabs rdx,0x13d362468              ;   {metadata(method data for {method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef077:   movabs rcx,0x110
  0x000000011b2ef081:   jne    0x000000011b2ef091
  0x000000011b2ef087:   movabs rcx,0x100
  0x000000011b2ef091:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x000000011b2ef095:   lea    rbx,[rbx+0x1]
  0x000000011b2ef099:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x000000011b2ef09d:   jne    0x000000011b2ef0cf
  0x000000011b2ef0a3:   movabs rsi,0x13d362468              ;   {metadata(method data for {method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef0ad:   add    QWORD PTR [rsi+0x120],0x1
  0x000000011b2ef0b5:   movabs rcx,0x6003df718              ;   {oop(a 'jdk/incubator/vector/LaneType'{0x00000006003df718})}
  0x000000011b2ef0bf:   mov    esi,0x43
  0x000000011b2ef0c4:   mov    rdx,rdi
  0x000000011b2ef0c7:   call   0x000000011ac6c080           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokestatic makeConv {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@29 (line 1008)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {static_call}
  0x000000011b2ef0cc:   mov    rsi,rax
  0x000000011b2ef0cf:   mov    rax,QWORD PTR [rsp+0xf8]
  0x000000011b2ef0d7:   mov    rdx,rax
  0x000000011b2ef0da:   movabs rcx,0x13d361fb8              ;   {metadata(method data for {method} {0x000000013d143710} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011b2ef0e4:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011b2ef0e7:   movabs r10,0x800000000
  0x000000011b2ef0f1:   add    rdx,r10
  0x000000011b2ef0f4:   cmp    rdx,QWORD PTR [rcx+0x180]
  0x000000011b2ef0fb:   jne    0x000000011b2ef10a
  0x000000011b2ef0fd:   add    QWORD PTR [rcx+0x188],0x1
  0x000000011b2ef105:   jmp    0x000000011b2ef170
  0x000000011b2ef10a:   cmp    rdx,QWORD PTR [rcx+0x190]
  0x000000011b2ef111:   jne    0x000000011b2ef120
  0x000000011b2ef113:   add    QWORD PTR [rcx+0x198],0x1
  0x000000011b2ef11b:   jmp    0x000000011b2ef170
  0x000000011b2ef120:   cmp    QWORD PTR [rcx+0x180],0x0
  0x000000011b2ef12b:   jne    0x000000011b2ef144
  0x000000011b2ef12d:   mov    QWORD PTR [rcx+0x180],rdx
  0x000000011b2ef134:   mov    QWORD PTR [rcx+0x188],0x1
  0x000000011b2ef13f:   jmp    0x000000011b2ef170
  0x000000011b2ef144:   cmp    QWORD PTR [rcx+0x190],0x0
  0x000000011b2ef14f:   jne    0x000000011b2ef168
  0x000000011b2ef151:   mov    QWORD PTR [rcx+0x190],rdx
  0x000000011b2ef158:   mov    QWORD PTR [rcx+0x198],0x1
  0x000000011b2ef163:   jmp    0x000000011b2ef170
  0x000000011b2ef168:   add    QWORD PTR [rcx+0x170],0x1
  0x000000011b2ef170:   movabs rcx,0x6003df6d0              ;   {oop(a 'jdk/incubator/vector/IntVector$IntSpecies'{0x00000006003df6d0})}
  0x000000011b2ef17a:   mov    rdx,rsi
  0x000000011b2ef17d:   mov    r8d,0x0
  0x000000011b2ef183:   mov    rsi,rax
  0x000000011b2ef186:   nop    DWORD PTR [rax+0x0]
  0x000000011b2ef18d:   movabs rax,0xffffffffffffffff
  0x000000011b2ef197:   call   0x000000011ac68e20           ; ImmutableOopMap {}
                                                            ;*invokevirtual convertShape {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@31 (line 287)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {virtual_call}
  0x000000011b2ef19c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011b2ef82c
  0x000000011b2ef19f:   mov    rdx,rax
  0x000000011b2ef1a2:   movabs rsi,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2ef1ac:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011b2ef1af:   movabs r10,0x800000000
  0x000000011b2ef1b9:   add    rdx,r10
  0x000000011b2ef1bc:   cmp    rdx,QWORD PTR [rsi+0x210]
  0x000000011b2ef1c3:   jne    0x000000011b2ef1d2
  0x000000011b2ef1c5:   add    QWORD PTR [rsi+0x218],0x1
  0x000000011b2ef1cd:   jmp    0x000000011b2ef238
  0x000000011b2ef1d2:   cmp    rdx,QWORD PTR [rsi+0x220]
  0x000000011b2ef1d9:   jne    0x000000011b2ef1e8
  0x000000011b2ef1db:   add    QWORD PTR [rsi+0x228],0x1
  0x000000011b2ef1e3:   jmp    0x000000011b2ef238
  0x000000011b2ef1e8:   cmp    QWORD PTR [rsi+0x210],0x0
  0x000000011b2ef1f3:   jne    0x000000011b2ef20c
  0x000000011b2ef1f5:   mov    QWORD PTR [rsi+0x210],rdx
  0x000000011b2ef1fc:   mov    QWORD PTR [rsi+0x218],0x1
  0x000000011b2ef207:   jmp    0x000000011b2ef238
  0x000000011b2ef20c:   cmp    QWORD PTR [rsi+0x220],0x0
  0x000000011b2ef217:   jne    0x000000011b2ef230
  0x000000011b2ef219:   mov    QWORD PTR [rsi+0x220],rdx
  0x000000011b2ef220:   mov    QWORD PTR [rsi+0x228],0x1
  0x000000011b2ef22b:   jmp    0x000000011b2ef238
  0x000000011b2ef230:   add    QWORD PTR [rsi+0x200],0x1
  0x000000011b2ef238:   movabs rdx,0x61f0c2328              ;   {oop(a 'jdk/incubator/vector/Int256Vector'{0x000000061f0c2328})}
  0x000000011b2ef242:   mov    rsi,rax
  0x000000011b2ef245:   movabs rax,0xffffffffffffffff
  0x000000011b2ef24f:   call   0x000000011ac68e60           ; ImmutableOopMap {}
                                                            ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@45 (line 608)
                                                            ;   {virtual_call}
  0x000000011b2ef254:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011b2ef831
  0x000000011b2ef257:   mov    rdx,rax
  0x000000011b2ef25a:   movabs rsi,0x13d4474b0              ;   {metadata(method data for {method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2ef264:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011b2ef267:   movabs r10,0x800000000
  0x000000011b2ef271:   add    rdx,r10
  0x000000011b2ef274:   cmp    rdx,QWORD PTR [rsi+0x248]
  0x000000011b2ef27b:   jne    0x000000011b2ef28a
  0x000000011b2ef27d:   add    QWORD PTR [rsi+0x250],0x1
  0x000000011b2ef285:   jmp    0x000000011b2ef2f0
  0x000000011b2ef28a:   cmp    rdx,QWORD PTR [rsi+0x258]
  0x000000011b2ef291:   jne    0x000000011b2ef2a0
  0x000000011b2ef293:   add    QWORD PTR [rsi+0x260],0x1
  0x000000011b2ef29b:   jmp    0x000000011b2ef2f0
  0x000000011b2ef2a0:   cmp    QWORD PTR [rsi+0x248],0x0
  0x000000011b2ef2ab:   jne    0x000000011b2ef2c4
  0x000000011b2ef2ad:   mov    QWORD PTR [rsi+0x248],rdx
  0x000000011b2ef2b4:   mov    QWORD PTR [rsi+0x250],0x1
  0x000000011b2ef2bf:   jmp    0x000000011b2ef2f0
  0x000000011b2ef2c4:   cmp    QWORD PTR [rsi+0x258],0x0
  0x000000011b2ef2cf:   jne    0x000000011b2ef2e8
  0x000000011b2ef2d1:   mov    QWORD PTR [rsi+0x258],rdx
  0x000000011b2ef2d8:   mov    QWORD PTR [rsi+0x260],0x1
  0x000000011b2ef2e3:   jmp    0x000000011b2ef2f0
  0x000000011b2ef2e8:   add    QWORD PTR [rsi+0x238],0x1
  0x000000011b2ef2f0:   movabs rdx,0x61f0e2880              ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000061f0e2880})}
  0x000000011b2ef2fa:   mov    rsi,rax
  0x000000011b2ef2fd:   movabs rax,0xffffffffffffffff
  0x000000011b2ef307:   call   0x000000011ac68ea0           ; ImmutableOopMap {}
                                                            ;*invokevirtual reduceLanesToLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@51 (line 609)
                                                            ;   {virtual_call}
  0x000000011b2ef30c:   add    rsp,0x110
  0x000000011b2ef313:   pop    rbp
  0x000000011b2ef314:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011b2ef31b:   ja     0x000000011b2ef836
  0x000000011b2ef321:   ret
  0x000000011b2ef322:   movabs rax,0xffffffffffffffff
  0x000000011b2ef32c:   add    rsp,0x110
  0x000000011b2ef333:   pop    rbp
  0x000000011b2ef334:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011b2ef33b:   ja     0x000000011b2ef84c
  0x000000011b2ef341:   ret
  0x000000011b2ef342:   movabs r10,0x13d444b20              ;   {metadata({method} {0x000000013d444b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011b2ef34c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef351:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef359:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@-1 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef35e:   jmp    0x000000011b2edc7a
  0x000000011b2ef363:   movabs r10,0x13d2ddd30              ;   {metadata({method} {0x000000013d2ddd30} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ef36d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef372:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef37a:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@-1 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef37f:   jmp    0x000000011b2edcb4
  0x000000011b2ef384:   call   0x000000011ad13220           ; ImmutableOopMap {rdi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@8 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef389:   movabs r10,0x13d22de80              ;   {metadata({method} {0x000000013d22de80} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011b2ef393:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef398:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef3a0:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 49)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@9 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef3a5:   jmp    0x000000011b2edd96
  0x000000011b2ef3aa:   movabs r10,0x800068070              ;   {metadata({method} {0x0000000800068070} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011b2ef3b4:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef3b9:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef3c1:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::checkIndex@-1 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@9 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef3c6:   jmp    0x000000011b2eddd8
  0x000000011b2ef3cb:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x000000011b2ef3d3:   call   0x000000011ad17400           ; ImmutableOopMap {rdi=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@9 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x000000011b2ef3d8:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x000000011b2ef3e0:   call   0x000000011ad17400           ; ImmutableOopMap {rdi=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@9 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x000000011b2ef3e5:   movabs r10,0x13d2f0350              ;   {metadata({method} {0x000000013d2f0350} 'dummyVector' '()Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ef3ef:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef3f4:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef3fc:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::dummyVector@-1 (line 4216)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@19 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef401:   jmp    0x000000011b2ede53
  0x000000011b2ef406:   movabs r10,0x13d15b048              ;   {metadata({method} {0x000000013d15b048} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011b2ef410:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef415:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef41d:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::dummyVector@1 (line 4216)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@19 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef422:   jmp    0x000000011b2ede8d
  0x000000011b2ef427:   movabs r10,0x13d306c20              ;   {metadata({method} {0x000000013d306c20} 'fromCharArray0' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011b2ef431:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef436:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef43e:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@-1 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef443:   jmp    0x000000011b2edee4
  0x000000011b2ef448:   movabs r10,0x13d2df470              ;   {metadata({method} {0x000000013d2df470} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ef452:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef457:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef45f:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@-1 (line 3704)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef464:   jmp    0x000000011b2edf21
  0x000000011b2ef469:   movabs r10,0x13d303578              ;   {metadata({method} {0x000000013d303578} 'vspecies' '()Ljdk/incubator/vector/ShortVector$ShortSpecies;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011b2ef473:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef478:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef480:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector::vspecies@-1 (line 86)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@1 (line 3704)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef485:   jmp    0x000000011b2edf5b
  0x000000011b2ef48a:   movabs r10,0x13d2ef9d8              ;   {metadata({method} {0x000000013d2ef9d8} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ef494:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef499:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef4a1:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::elementType@-1 (line 4118)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@10 (line 3706)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef4a6:   jmp    0x000000011b2edfb7
  0x000000011b2ef4ab:   movabs r10,0x13d2e0c80              ;   {metadata({method} {0x000000013d2e0c80} 'charArrayAddress' '([CI)J' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ef4b5:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef4ba:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef4c2:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::charArrayAddress@-1 (line 3982)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@20 (line 3707)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef4c7:   jmp    0x000000011b2ee003
  0x000000011b2ef4cc:   movabs r10,0x8000bf490              ;   {metadata({method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ef4d6:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef4db:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef4e3:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@26 (line 3707)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef4e8:   jmp    0x000000011b2ee07f
  0x000000011b2ef4ed:   movabs r10,0x13d400a68              ;   {metadata({method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2ef4f7:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef4fc:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef504:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800c00800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@26 (line 3707)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef509:   jmp    0x000000011b2ee0d3
  0x000000011b2ef50e:   mov    QWORD PTR [rsp],rax
  0x000000011b2ef512:   call   0x000000011ad15620           ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@34 (line 3705)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011b2ef517:   call   0x000000011ad13220           ; ImmutableOopMap {rdi=Oop }
                                                            ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef51c:   movabs r10,0x13d2d8c28              ;   {metadata({method} {0x000000013d2d8c28} 'sub' '(S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ef526:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef52b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef533:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::sub@-1 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef538:   jmp    0x000000011b2ee2e6
  0x000000011b2ef53d:   movabs r10,0x13d2d74e0              ;   {metadata({method} {0x000000013d2d74e0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ef547:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef54c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef554:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@-1 (line 800)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef559:   jmp    0x000000011b2ee323
  0x000000011b2ef55e:   movabs r10,0x13d2d4668              ;   {metadata({method} {0x000000013d2d4668} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/ShortVector')}
  0x000000011b2ef568:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef56d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef575:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::opKind@-1 (line 71)
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@3 (line 800)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef57a:   jmp    0x000000011b2ee35d
  0x000000011b2ef57f:   movabs r10,0x13d151740              ;   {metadata({method} {0x000000013d151740} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators')}
  0x000000011b2ef589:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef58e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef596:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators::opKind@-1 (line 409)
                                                            ; - jdk.incubator.vector.ShortVector::opKind@2 (line 71)
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@3 (line 800)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef59b:   jmp    0x000000011b2ee397
  0x000000011b2ef5a0:   movabs r10,0x13d3418f0              ;   {metadata({method} {0x000000013d3418f0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl')}
  0x000000011b2ef5aa:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef5af:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef5b7:   call   0x000000011ad18c00           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@-1 (line 883)
                                                            ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                                                            ; - jdk.incubator.vector.ShortVector::opKind@2 (line 71)
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@3 (line 800)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef5bc:   jmp    0x000000011b2ee45f
  0x000000011b2ef5c1:   call   0x000000011ad13220           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual compare {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@21 (line 603)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef5c6:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rax=Oop }
                                                            ;*invokevirtual anyTrue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef5cb:   movabs r10,0x13d30d268              ;   {metadata({method} {0x000000013d30d268} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ef5d5:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef5da:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef5e2:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@-1 (line 728)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef5e7:   jmp    0x000000011b2ee724
  0x000000011b2ef5ec:   movabs r10,0x13d30c3f0              ;   {metadata({method} {0x000000013d30c3f0} 'vspecies' '()Ljdk/incubator/vector/ShortVector$ShortSpecies;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ef5f6:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef5fb:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef603:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::vspecies@-1 (line 579)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@11 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef608:   jmp    0x000000011b2ee761
  0x000000011b2ef60d:   movabs r10,0x13d2f0d88              ;   {metadata({method} {0x000000013d2f0d88} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011b2ef617:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef61c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef624:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rax=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@-1 (line 4319)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef629:   jmp    0x000000011b2ee7a8
  0x000000011b2ef62e:   movabs r10,0x13d30d418              ;   {metadata({method} {0x000000013d30d418} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011b2ef638:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef63d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef645:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@-1 (line 744)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef64a:   jmp    0x000000011b2ee820
  0x000000011b2ef64f:   movabs r10,0x8000bf490              ;   {metadata({method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ef659:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef65e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef666:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop [256]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@19 (line 745)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef66b:   jmp    0x000000011b2ee8a9
  0x000000011b2ef670:   movabs r10,0x13d400a68              ;   {metadata({method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2ef67a:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef67f:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef687:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800c00800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@19 (line 745)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef68c:   jmp    0x000000011b2ee8fd
  0x000000011b2ef691:   mov    QWORD PTR [rsp],rax
  0x000000011b2ef695:   call   0x000000011ad15620           ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@27 (line 744)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011b2ef69a:   movabs r10,0x8000bf490              ;   {metadata({method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011b2ef6a4:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef6a9:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef6b1:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rdi=Oop rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@18 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef6b6:   jmp    0x000000011b2eeb2e
  0x000000011b2ef6bb:   movabs r10,0x13d400a68              ;   {metadata({method} {0x000000013d400a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011b2ef6c5:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef6ca:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef6d2:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rdi=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800c00800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@18 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef6d7:   jmp    0x000000011b2eeb82
  0x000000011b2ef6dc:   movabs r10,0x13d143710              ;   {metadata({method} {0x000000013d143710} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011b2ef6e6:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef6eb:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef6f3:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@-1 (line 282)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef6f8:   jmp    0x000000011b2eecd2
  0x000000011b2ef6fd:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop }
                                                            ;*getfield laneType {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractVector::castShape@12 (line 285)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef702:   movabs r10,0x13d348310              ;   {metadata({method} {0x000000013d348310} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef70c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef711:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef719:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@-1 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef71e:   jmp    0x000000011b2eedcd
  0x000000011b2ef723:   movabs r10,0x13d348250              ;   {metadata({method} {0x000000013d348250} 'ofCopy' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef72d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef732:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef73a:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@-1 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef73f:   jmp    0x000000011b2eee4a
  0x000000011b2ef744:   movabs r10,0x13d348500              ;   {metadata({method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef74e:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef753:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef75b:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@-1 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef760:   jmp    0x000000011b2eee84
  0x000000011b2ef765:   movabs r10,0x13d348a50              ;   {metadata({method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef76f:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef774:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef77c:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@-1 (line 1072)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef781:   jmp    0x000000011b2eeebe
  0x000000011b2ef786:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*getfield switchKey {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@57 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef78b:   mov    QWORD PTR [rsp],rsi
  0x000000011b2ef78f:   mov    QWORD PTR [rsp+0x8],rcx
  0x000000011b2ef794:   call   0x000000011ad12920           ; ImmutableOopMap {[248]=Oop rdi=Oop rcx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@60 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b2ef799:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@60 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef79e:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rdi=Oop rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef7a3:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rdi=Oop rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef7a8:   mov    QWORD PTR [rsp],rsi
  0x000000011b2ef7ac:   mov    QWORD PTR [rsp+0x8],rdx
  0x000000011b2ef7b1:   call   0x000000011ad12920           ; ImmutableOopMap {[248]=Oop rdi=Oop rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b2ef7b6:   movabs r10,0x13d348500              ;   {metadata({method} {0x000000013d348500} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef7c0:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef7c5:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef7cd:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@-1 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef7d2:   jmp    0x000000011b2eefc6
  0x000000011b2ef7d7:   movabs r10,0x13d348a50              ;   {metadata({method} {0x000000013d348a50} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011b2ef7e1:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011b2ef7e6:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011b2ef7ee:   call   0x000000011ad18c00           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@-1 (line 1072)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b2ef7f3:   jmp    0x000000011b2ef000
  0x000000011b2ef7f8:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*getfield switchKey {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@57 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef7fd:   mov    QWORD PTR [rsp],rsi
  0x000000011b2ef801:   mov    QWORD PTR [rsp+0x8],rcx
  0x000000011b2ef806:   call   0x000000011ad12920           ; ImmutableOopMap {[248]=Oop rdi=Oop rcx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@60 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b2ef80b:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@60 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef810:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rdi=Oop rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef815:   call   0x000000011ad13220           ; ImmutableOopMap {[248]=Oop rdi=Oop rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef81a:   mov    QWORD PTR [rsp],0x5
  0x000000011b2ef822:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011b2ef827:   call   0x000000011ad12920           ; ImmutableOopMap {[248]=Oop rdi=Oop rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b2ef82c:   call   0x000000011ad13220           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@45 (line 608)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef831:   call   0x000000011ad13220           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual reduceLanesToLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@51 (line 609)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b2ef836:   movabs r10,0x11b2ef314              ;   {internal_word}
  0x000000011b2ef840:   mov    QWORD PTR [r15+0x350],r10
  0x000000011b2ef847:   jmp    0x000000011ac72100           ;   {runtime_call SafepointBlob}
  0x000000011b2ef84c:   movabs r10,0x11b2ef334              ;   {internal_word}
  0x000000011b2ef856:   mov    QWORD PTR [r15+0x350],r10
  0x000000011b2ef85d:   jmp    0x000000011ac72100           ;   {runtime_call SafepointBlob}
  0x000000011b2ef862:   nop
  0x000000011b2ef863:   nop
  0x000000011b2ef864:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011b2ef86b:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011b2ef876:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011b2ef881:   add    rsp,0x110
  0x000000011b2ef888:   pop    rbp
  0x000000011b2ef889:   jmp    0x000000011ad12000           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b2ef88e:   hlt
  0x000000011b2ef88f:   hlt
  0x000000011b2ef890:   hlt
  0x000000011b2ef891:   hlt
  0x000000011b2ef892:   hlt
  0x000000011b2ef893:   hlt
  0x000000011b2ef894:   hlt
  0x000000011b2ef895:   hlt
  0x000000011b2ef896:   hlt
  0x000000011b2ef897:   hlt
  0x000000011b2ef898:   hlt
  0x000000011b2ef899:   hlt
  0x000000011b2ef89a:   hlt
  0x000000011b2ef89b:   hlt
  0x000000011b2ef89c:   hlt
  0x000000011b2ef89d:   hlt
  0x000000011b2ef89e:   hlt
  0x000000011b2ef89f:   hlt
[Stub Code]
  0x000000011b2ef8a0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011b2ef8a5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef8af:   jmp    0x000000011b2ef8af           ;   {runtime_call}
  0x000000011b2ef8b4:   nop
  0x000000011b2ef8b5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef8bf:   jmp    0x000000011b2ef8bf           ;   {runtime_call}
  0x000000011b2ef8c4:   nop
  0x000000011b2ef8c5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef8cf:   jmp    0x000000011b2ef8cf           ;   {runtime_call}
  0x000000011b2ef8d4:   nop
  0x000000011b2ef8d5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef8df:   jmp    0x000000011b2ef8df           ;   {runtime_call}
  0x000000011b2ef8e4:   nop
  0x000000011b2ef8e5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef8ef:   jmp    0x000000011b2ef8ef           ;   {runtime_call}
  0x000000011b2ef8f4:   nop
  0x000000011b2ef8f5:   movabs rbx,0x80003a668              ;   {static_stub}
  0x000000011b2ef8ff:   jmp    0x000000011ad3bb79           ;   {runtime_call I2C/C2I adapters}
  0x000000011b2ef904:   nop
  0x000000011b2ef905:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef90f:   jmp    0x000000011b2ef90f           ;   {runtime_call}
  0x000000011b2ef914:   nop
  0x000000011b2ef915:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef91f:   jmp    0x000000011b2ef91f           ;   {runtime_call}
  0x000000011b2ef924:   nop
  0x000000011b2ef925:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef92f:   jmp    0x000000011b2ef92f           ;   {runtime_call}
  0x000000011b2ef934:   nop
  0x000000011b2ef935:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef93f:   jmp    0x000000011b2ef93f           ;   {runtime_call}
  0x000000011b2ef944:   nop
  0x000000011b2ef945:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef94f:   jmp    0x000000011b2ef94f           ;   {runtime_call}
  0x000000011b2ef954:   nop
  0x000000011b2ef955:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011b2ef95f:   jmp    0x000000011b2ef95f           ;   {runtime_call}
[Exception Handler]
  0x000000011b2ef964:   call   0x000000011ad15000           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011b2ef969:   movabs rdi,0x11071afc1              ;   {external_word}
  0x000000011b2ef973:   and    rsp,0xfffffffffffffff0
  0x000000011b2ef977:   call   0x00000001103c5290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b2ef97c:   hlt
[Deopt Handler Code]
  0x000000011b2ef97d:   movabs r10,0x11b2ef97d              ;   {section_word}
  0x000000011b2ef987:   push   r10
  0x000000011b2ef989:   jmp    0x000000011ac713a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b2ef98e:   hlt
  0x000000011b2ef98f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

FastDoubleParser               :    502.65 MB/s (+/- 2.4 %)    28.83 Mfloat/s      34.68 ns/f
FastDoubleParserFromCharArray  :    571.55 MB/s (+/- 0.7 %)    32.80 Mfloat/s      30.48 ns/f
FastDoubleParserFromByteArray  :    578.67 MB/s (+/- 2.2 %)    33.20 Mfloat/s      30.12 ns/f
Double                         :     93.67 MB/s (+/- 3.4 %)     5.37 Mfloat/s     186.22 ns/f

Speedup FastDoubleParser              vs Double: 5.37
Speedup FastDoubleParserFromCharArray vs Double: 6.10
Speedup FastDoubleParserFromByteArray vs Double: 6.18


You can also provide a filename: it should contain one string per line corresponding to a number.

Process finished with exit code 0
